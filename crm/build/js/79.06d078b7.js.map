{"version":3,"file":"build/js/79.06d078b7.js","mappings":"gNAGA,MAAMA,EAAa,CAAEC,MAAO,WAS5B,OAA4BC,EAAAA,EAAAA,IAAiB,CAC3CC,OAAQ,UACRC,KAAAA,CAAMC,GCIR,MAAMC,GAASC,EAAAA,EAAAA,MACTC,GAAQC,EAAAA,EAAAA,MAGRC,GAAYC,EAAAA,EAAAA,MAEZC,EAAOC,iBACT,GAAIL,EAAMM,MAAMC,cAAe,CAE3B,MAAMC,EAAQC,SAAST,EAAMM,MAAMC,cAAyB,IACtDG,EAAYR,EAAUS,aAAaH,GAAOE,UAC1CE,EAAYd,EAAOe,QAAQH,GAAWI,KAC5CZ,EAAUa,2BAA2BH,SAC/BI,EAAAA,EAAAA,MACNlB,EAAOmB,QAAQP,GACfR,EAAUgB,2BAA2BN,E,MAC9BZ,EAAMM,MAAMa,cAEnBrB,EAAOmB,QAAQjB,EAAMM,MAAMa,aAEnC,EDEA,OCAAf,IDAO,CAACgB,EAAUC,MACRC,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAO/B,GAEnD,IExCA,MAAMgC,EAAc,EAEpB,O","sources":["webpack://vue-manager-system/./src/views/others/transit.vue?ca96","webpack://vue-manager-system/./src/views/others/transit.vue","webpack://vue-manager-system/./src/views/others/transit.vue?dbb0"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"transit\" }\n\nimport { nextTick } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { pageViewsStore } from \"@/stores\";\nimport { useRoute } from \"vue-router\";\n\n// 全局路由对象\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'transit',\n  setup(__props) {\n\nconst router = useRouter();\nconst route = useRoute();\n\n// vuex\nconst pageViews = pageViewsStore();\n\nconst init = async function () {\n    if (route.query.fromPageIndex) {\n        // 如果是来自指定的页面索引，这里去除缓存再跳转\n        const index = parseInt(route.query.fromPageIndex as string, 10);\n        const routePath = pageViews.visitedViews[index].routePath;\n        const routeName = router.resolve(routePath).name as string;\n        pageViews.insertExcludeCacheViewName(routeName);\n        await nextTick();\n        router.replace(routePath);\n        pageViews.deleteExcludeCacheViewName(routeName);\n    } else if (route.query.fromPagePath) {\n        // 如果直接指定跳转页面\n        router.replace(route.query.fromPagePath as string);\n    }\n};\n\ninit();\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1))\n}\n}\n\n})","<!--\n * @创建者: yujinjin9@126.com\n * @创建时间: 2023-12-26 15:15:41\n * @最后修改作者: yujinjin9@126.com\n * @最后修改时间: 2024-03-22 14:07:55\n * @项目的路径: \\vue-manager-system\\src\\views\\others\\transit.vue\n * @描述: 中台中转页面（主要用来刷新当前正在展示的单页）\n-->\n<template>\n    <div class=\"transit\"></div>\n</template>\n<script setup lang=\"ts\">\nimport { nextTick } from \"vue\";\nimport { useRouter } from \"vue-router\";\nimport { pageViewsStore } from \"@/stores\";\nimport { useRoute } from \"vue-router\";\n\n// 全局路由对象\nconst router = useRouter();\nconst route = useRoute();\n\n// vuex\nconst pageViews = pageViewsStore();\n\nconst init = async function () {\n    if (route.query.fromPageIndex) {\n        // 如果是来自指定的页面索引，这里去除缓存再跳转\n        const index = parseInt(route.query.fromPageIndex as string, 10);\n        const routePath = pageViews.visitedViews[index].routePath;\n        const routeName = router.resolve(routePath).name as string;\n        pageViews.insertExcludeCacheViewName(routeName);\n        await nextTick();\n        router.replace(routePath);\n        pageViews.deleteExcludeCacheViewName(routeName);\n    } else if (route.query.fromPagePath) {\n        // 如果直接指定跳转页面\n        router.replace(route.query.fromPagePath as string);\n    }\n};\n\ninit();\n</script>\n","import script from \"./transit.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./transit.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["_hoisted_1","class","_defineComponent","__name","setup","__props","router","useRouter","route","useRoute","pageViews","pageViewsStore","init","async","query","fromPageIndex","index","parseInt","routePath","visitedViews","routeName","resolve","name","insertExcludeCacheViewName","nextTick","replace","deleteExcludeCacheViewName","fromPagePath","_ctx","_cache","_openBlock","_createElementBlock","__exports__"],"sourceRoot":""}