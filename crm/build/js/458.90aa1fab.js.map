{"version":3,"file":"build/js/458.90aa1fab.js","mappings":"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","sources":["webpack://vue-manager-system/./src/services/iframe-message.ts","webpack://vue-manager-system/./src/views/outside/home.vue?5b67","webpack://vue-manager-system/./src/views/outside/home.vue","webpack://vue-manager-system/./src/views/outside/home.vue?3d06"],"sourcesContent":["/*\n * @创建者: yujinjin9@126.com\n * @创建时间: 2023-12-20 17:47:33\n * @最后修改作者: yujinjin9@126.com\n * @最后修改时间: 2024-03-01 14:48:24\n * @项目的路径: \\vue-manager-system\\src\\services\\iframe-message.ts\n * @描述: 子应用和中台系统的通信框架\n */\n\n// 中台系统当前页面的唯一标识\nlet iframeId: string;\n\n// 回调函数集合（页面发送消息后，中台返回的结果）\nconst callbackFunctions: Record<string, (value: any) => any> = {};\n\n// 接收消息\nconst receiveMessage = function (event: MessageEvent) {\n    if (event.data.eventType === \"setIframeId\") {\n        iframeId = event.data.value;\n    } else if (event.data.eventType === \"callback\" && callbackFunctions[event.data.callbackId]) {\n        callbackFunctions[event.data.callbackId](event.data.value);\n        delete callbackFunctions[event.data.callbackId];\n    }\n};\n\n// 发送消息\nconst sendMessage = function (data: any) {\n    window.top?.postMessage(data, \"*\");\n};\n\n// 生成回调函数ID\nconst generateCallbackId = function (callback: (value: any) => any) {\n    const callbackId = Date.now() + \"\";\n    callbackFunctions[callbackId] = callback;\n    return callbackId;\n};\n\nexport default {\n    // 初始化\n    init() {\n        // 接收消息\n        window.addEventListener(\"message\", receiveMessage, false);\n    },\n    /**\n     * 打开新的tab page\n     * @param url: 页面地址，title: 页面标题，pageId: 指定当前生成的tab page ID(必须唯一，可不传)\n     */\n    openNewTabPage({ url, title, pageId }: { url: string; title: string; pageId?: string }) {\n        if (!iframeId) {\n            logs.error(\"未获取到当前页面唯一标识，请检查框架引用时机\");\n            return;\n        }\n        sendMessage({\n            eventType: \"openNewTabPage\",\n            value: { url, title, iframeId, pageId }\n        });\n    },\n    /**\n     * 关闭当前tab page\n     * @param id 指定tab page的ID，如果不传则关闭当前tab page\n     * @description 怎么拿到其他tab page的ID？有个前提就是当前页面知道自己有使用openNewTabPage去打开过页面，\n     * <br/> 在使用openNewTabPage方法时指定ID，或者关联的页面放sessionLocaStroage共享获取ID，这些方案都是自己的业务代码想办法实现\n     * <br/> 框架不考虑这些\n     */\n    closeTabPage(id?: string) {\n        if (!id) {\n            id = iframeId;\n        }\n        if (!id) {\n            logs.error(\"未获取到当前页面唯一标识，请检查框架引用时机\");\n            return;\n        }\n        sendMessage({\n            eventType: \"closeTabPage\",\n            value: id\n        });\n    },\n    /**\n     * 跳转tab page\n     * @param pageId 指定tab id; callback: 回调函数，当前页面是否关闭成功\n     */\n    gotoTabPage({ pageId, callback }: { pageId: string; callback: (value: boolean) => void }) {\n        if (!iframeId) {\n            logs.error(\"未获取到当前页面唯一标识，请检查框架引用时机\");\n            return;\n        }\n        sendMessage({\n            eventType: \"gotoTabPage\",\n            value: { pageId, iframeId, callbackId: generateCallbackId(callback) }\n        });\n    },\n    /**\n     * 当前登录的用户token过期\n     */\n    loginTokenExpired() {\n        if (!iframeId) {\n            logs.error(\"未获取到当前页面唯一标识，请检查框架引用时机\");\n            return;\n        }\n        sendMessage({\n            eventType: \"loginTokenExpired\",\n            value: iframeId\n        });\n    },\n    /**\n     * 销毁\n     */\n    destroy() {\n        window.removeEventListener(\"message\", receiveMessage);\n    }\n};\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nimport _imports_0 from '@assets/logo.png'\n\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-4fb9a358\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"home\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  alt: \"Vue logo\",\n  src: _imports_0\n}, null, -1))\nconst _hoisted_3 = { class: \"button-panel\" }\n\nimport { ref } from \"vue\";\nimport iframeMessage from \"@/services/iframe-message\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'home',\n  setup(__props) {\n\niframeMessage.init();\n\n// 当前页面ID值\nconst pageId = ref<string>(\"\");\n// 打开新页面\nconst newIFramePage = function () {\n    pageId.value = Date.now() + \"\";\n    iframeMessage.openNewTabPage({\n        url: window.location.origin + config.projectContentPath + (config.isWebHash ? \"/#\" : \"\") + \"/outside/about\",\n        title: \"外部about页面\",\n        pageId: pageId.value\n    });\n};\n\n// 关闭当前页面\nconst closeCurrentIFramePage = function () {\n    iframeMessage.closeTabPage();\n};\n\n// 跳转刚刚打开的新页面\nconst gotoNewIFramePage = function () {\n    iframeMessage.gotoTabPage({\n        pageId: pageId.value,\n        callback: function (result: boolean) {\n            console.info(\"打开页面回调函数结果: \" + result);\n        }\n    });\n};\n\n// 关闭刚刚打开的新页面\nconst closeNewIFramePage = function () {\n    iframeMessage.closeTabPage(pageId.value);\n};\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_button = _resolveComponent(\"el-button\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    _createElementVNode(\"div\", _hoisted_3, [\n      _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: newIFramePage\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"打开新页面\")\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_el_button, {\n        type: \"primary\",\n        onClick: closeCurrentIFramePage\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"关闭当前页面\")\n        ]),\n        _: 1\n      }),\n      (pageId.value)\n        ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n            _createVNode(_component_el_button, {\n              type: \"primary\",\n              onClick: gotoNewIFramePage\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"跳转刚刚打开的新页面\")\n              ]),\n              _: 1\n            }),\n            _createVNode(_component_el_button, {\n              type: \"primary\",\n              onClick: closeNewIFramePage\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"关闭刚刚打开的新页面\")\n              ]),\n              _: 1\n            })\n          ], 64))\n        : _createCommentVNode(\"\", true)\n    ])\n  ]))\n}\n}\n\n})","<!--\n * @创建者: yujinjin9@126.com\n * @创建时间: 2024-03-01 11:25:25\n * @最后修改作者: yujinjin9@126.com\n * @最后修改时间: 2024-03-26 11:46:07\n * @项目的路径: \\vue-manager-system\\src\\views\\outside\\home.vue\n * @描述: 外部系统home页（此页面仅做框架测试用）\n-->\n<template>\n    <div class=\"home\">\n        <img alt=\"Vue logo\" src=\"@assets/logo.png\" />\n        <div class=\"button-panel\">\n            <el-button type=\"primary\" @click=\"newIFramePage\">打开新页面</el-button>\n            <el-button type=\"primary\" @click=\"closeCurrentIFramePage\">关闭当前页面</el-button>\n            <template v-if=\"pageId\">\n                <el-button type=\"primary\" @click=\"gotoNewIFramePage\">跳转刚刚打开的新页面</el-button>\n                <el-button type=\"primary\" @click=\"closeNewIFramePage\">关闭刚刚打开的新页面</el-button>\n            </template>\n        </div>\n    </div>\n</template>\n<script setup lang=\"ts\">\nimport { ref } from \"vue\";\nimport iframeMessage from \"@/services/iframe-message\";\n\niframeMessage.init();\n\n// 当前页面ID值\nconst pageId = ref<string>(\"\");\n// 打开新页面\nconst newIFramePage = function () {\n    pageId.value = Date.now() + \"\";\n    iframeMessage.openNewTabPage({\n        url: window.location.origin + config.projectContentPath + (config.isWebHash ? \"/#\" : \"\") + \"/outside/about\",\n        title: \"外部about页面\",\n        pageId: pageId.value\n    });\n};\n\n// 关闭当前页面\nconst closeCurrentIFramePage = function () {\n    iframeMessage.closeTabPage();\n};\n\n// 跳转刚刚打开的新页面\nconst gotoNewIFramePage = function () {\n    iframeMessage.gotoTabPage({\n        pageId: pageId.value,\n        callback: function (result: boolean) {\n            console.info(\"打开页面回调函数结果: \" + result);\n        }\n    });\n};\n\n// 关闭刚刚打开的新页面\nconst closeNewIFramePage = function () {\n    iframeMessage.closeTabPage(pageId.value);\n};\n</script>\n<style lang=\"scss\" scoped>\n.home {\n    text-align: center;\n\n    .button-panel {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n\n        .el-button {\n            width: 300px;\n            margin-top: 20px;\n\n            & + .el-button {\n                margin-left: 0px;\n            }\n        }\n    }\n}\n</style>\n","import script from \"./home.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./home.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./home.vue?vue&type=style&index=0&id=4fb9a358&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4fb9a358\"]])\n\nexport default __exports__"],"names":["iframeId","callbackFunctions","receiveMessage","event","data","eventType","value","callbackId","sendMessage","window","top","postMessage","generateCallbackId","callback","Date","now","init","addEventListener","openNewTabPage","url","title","pageId","logs","error","closeTabPage","id","gotoTabPage","loginTokenExpired","destroy","removeEventListener","_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_createElementVNode","alt","src","_imports_0","_hoisted_3","_defineComponent","__name","setup","__props","iframeMessage","ref","newIFramePage","location","origin","config","projectContentPath","isWebHash","closeCurrentIFramePage","gotoNewIFramePage","result","console","info","closeNewIFramePage","_ctx","_cache","_component_el_button","_resolveComponent","_openBlock","_createElementBlock","_createVNode","type","onClick","default","_withCtx","_createTextVNode","_","_Fragment","key","_createCommentVNode","__exports__"],"sourceRoot":""}