{"version":3,"file":"build/js/454.b77646b8.js","mappings":"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","sources":["webpack://vue-manager-system/./src/api/system.ts","webpack://vue-manager-system/./src/views/system/messages/search-config.ts","webpack://vue-manager-system/./src/views/system/messages/components/add-form-dialog.vue?938e","webpack://vue-manager-system/./src/views/system/messages/components/add-form-dialog.vue","webpack://vue-manager-system/./src/views/system/messages/components/add-form-dialog.vue?c268","webpack://vue-manager-system/./src/views/system/messages/index.vue?a42d","webpack://vue-manager-system/./src/views/system/messages/index.vue","webpack://vue-manager-system/./src/views/system/messages/index.vue?bf36"],"sourcesContent":["/**\n * 作者：yujinjin9@126.com\n * 时间：2019-11-28\n * 描述：系统管理API接口\n */\n\nimport type { Http } from \"../../types/http\";\nimport request from \"./request\";\nimport commonApi from \"./common\";\n\nexport default {\n    /**\n     * 用户登录\n     */\n    login(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/login\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 发送验证码\n     */\n    sendValidateCode(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/sendValidateCode\",\n                    data: inputData,\n                    method: \"POST\"\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 获取未读消息列表\n     */\n    queryUnreadMessages(ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/queryUnreadMessages\",\n                    method: \"GET\"\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 查询登录用户的菜单列表\n     */\n    queryLoginUserMenus<T>(ajaxOptions?: Http.RequestConfig) {\n        return request<T>(\n            Object.assign(\n                {\n                    url: \"/system/queryLoginUserMenus\",\n                    method: \"GET\"\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 修改当前用户登录的密码\n     */\n    updateLoginPassword(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/updateLoginPassword\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 修改当前登录用户的基本信息\n     */\n    updateLoginUserInfo(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/updateLoginUserInfo\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 分页查询系统模块列表\n     */\n    queryPageModuleList(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/queryPageModuleList\",\n                    params: inputData,\n                    method: \"GET\"\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 查询系统模块列表\n     */\n    queryModuleList(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/queryModuleList\",\n                    params: inputData,\n                    method: \"GET\"\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 新增或修改模块\n     */\n    addOrUpdateModule(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/addOrUpdateModule\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 删除模块\n     */\n    deleteModuleById(id: string, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/deleteModuleById\",\n                    data: { id }\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 分页查询系统菜单列表\n     */\n    queryPageMenuList(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/queryPageMenuList\",\n                    params: inputData,\n                    method: \"GET\"\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 查询系统菜单列表\n     */\n    queryMenuList(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/queryMenuList\",\n                    params: inputData,\n                    method: \"GET\"\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 新增或修改菜单\n     */\n    addOrUpdateMenu(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/addOrUpdateMenu\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 切换菜单锁定状态信息\n     */\n    toggleMenuLockStatus(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/updateMenuLockStatus\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 根据菜单ID查询角色列表（菜单页面查询绑定的角色列表）\n     */\n    queryRoleListByMenuId(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/queryRoleListByMenuId\",\n                    params: inputData,\n                    method: \"GET\"\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 删除菜单\n     */\n    deleteMenu(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/deleteMenu\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 上传批量菜单EXCEL(批量新增菜单)\n     */\n    uploadMenusExcel(file: File, ajaxOptions?: Http.RequestConfig) {\n        return commonApi.upload({ file }, \"/system/uploadMenusExcel\", ajaxOptions);\n    },\n\n    /**\n     * 批量新增菜单信息\n     */\n    batchInsertMenus(inputData: Record<string, any>[], ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/batchInsertMenus\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 分页查询角色列表\n     */\n    queryPageRoleList(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/queryPageRoleList\",\n                    params: inputData,\n                    method: \"GET\"\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 查询角色列表\n     */\n    queryRoleList(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/queryRoleList\",\n                    params: inputData,\n                    method: \"GET\"\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 根据角色ID查询菜单列表（角色页面查询绑定的菜单）\n     */\n    queryMenuListByRoleId(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/queryMenuListByRoleId\",\n                    params: inputData,\n                    method: \"GET\"\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 修改角色信息\n     */\n    addOrUpdateRole(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/addOrUpdateRole\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 切换角色锁定状态信息\n     */\n    toggleRoleLockStatus(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/updateRoleLockStatus\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 更新角色的菜单列表(角色页面绑定菜单)\n     */\n    updateMenusByRoleId(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/updateMenusByRoleId\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 删除角色信息\n     */\n    deleteRole(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/deleteRole\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 上传批量角色EXCEL(批量新增角色)\n     */\n    uploadRolesExcel(file: File, ajaxOptions?: Http.RequestConfig) {\n        return commonApi.upload({ file }, \"/system/uploadRolesExcel\", ajaxOptions);\n    },\n\n    /**\n     * 批量新增角色信息\n     */\n    batchInsertRoles(inputData: Record<string, any>[], ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/batchInsertRoles\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 分页查询系统用户列表\n     */\n    queryPageUserList(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/queryPageUserList\",\n                    method: \"GET\",\n                    params: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 根据用户ID查询角色列表（用户页面查询绑定角色列表）\n     */\n    queryRoleListByUserId(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/queryRoleListByUserId\",\n                    params: inputData,\n                    method: \"GET\"\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 新增或修改用户信息\n     */\n    addOrUpdateUser(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/addOrUpdateUser\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 根据用户ID绑定角色列表（用户页面绑定角色信息）\n     */\n    updateRoleListByUserId(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/updateRoleListByUserId\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 删除用户信息\n     */\n    deleteUser(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/deleteUser\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 切换用户锁定状态信息\n     */\n    toggleUserLockStatus(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/updateUserLockStatus\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 重置用户密码\n     */\n    resetUerPassword(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/resetUerPassword\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 上传批量用户EXCEL(批量新增用户)\n     */\n    uploadUsersExcel(file: File, ajaxOptions?: Http.RequestConfig) {\n        return commonApi.upload({ file }, \"/system/uploadUsersExcel\", ajaxOptions);\n    },\n\n    /**\n     * 批量新增用户信息\n     */\n    batchInsertUers(inputData: Record<string, any>[], ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/batchInsertUers\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 分页查询站内信列表（创建的数量）\n     */\n    queryPageMessageList(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/queryPageMessageList\",\n                    params: inputData,\n                    method: \"GET\"\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 发送站内信\n     */\n    insertMessage(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/system/sendMessage\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    }\n};\n","/*\n * @创建者: yujinjin9@126.com\n * @创建时间: 2024-01-16 14:52:33\n * @最后修改作者: yujinjin9@126.com\n * @最后修改时间: 2024-01-16 17:18:09\n * @项目的路径: \\vue-manager-system\\src\\views\\system\\messages\\search-config.ts\n * @描述: 站内信查询配置\n */\nimport systemAPI from \"@api/system\";\nimport { HANDLE_CODES } from \"@/services/constants\";\n\nexport default function ({ showDialogHandle }) {\n    return {\n        searchFormProps: {\n            isShowCollapse: false,\n            fields: [\n                {\n                    name: \"keyword\",\n                    type: \"input\",\n                    label: \"站内信标题/内容\"\n                },\n                {\n                    name: \"module\",\n                    type: \"select\",\n                    label: \"模块\",\n                    data: []\n                }\n            ]\n        },\n        actionBarProps: {\n            buttons: [\n                {\n                    text: \"新增\",\n                    handleCode: HANDLE_CODES.CREATE,\n                    click: showDialogHandle,\n                    props: {\n                        type: \"primary\"\n                    }\n                }\n            ]\n        },\n        dataTableProps: {\n            query: systemAPI.queryPageMessageList,\n            columns: [\n                {\n                    label: \"标题\",\n                    prop: \"title\",\n                    minWidth: 150\n                },\n                {\n                    label: \"内容\",\n                    prop: \"content\",\n                    minWidth: 150,\n                    showOverflowTooltip: true\n                },\n                {\n                    label: \"所属模块\",\n                    prop: \"moduleCode\",\n                    minWidth: 100,\n                    type: \"enum\",\n                    data: [] as Record<string, any>[]\n                },\n                {\n                    label: \"所选角色\",\n                    prop: \"roles\",\n                    minWidth: 150,\n                    type: \"enum\",\n                    data: [] as Record<string, any>[]\n                },\n                {\n                    label: \"状态\",\n                    prop: \"status\",\n                    width: 100,\n                    slot: \"dataTable_status\"\n                },\n                {\n                    label: \"预计发送数量\",\n                    prop: \"estimateSendNumber\",\n                    type: \"number\",\n                    width: 100\n                },\n                {\n                    label: \"实际发送数量\",\n                    prop: \"realSendNumber\",\n                    width: 100\n                },\n                {\n                    label: \"更新人\",\n                    prop: \"created\",\n                    minWidth: 100\n                },\n                {\n                    label: \"创建时间\",\n                    prop: \"createTime\",\n                    type: \"date\",\n                    formate: \"YYYY-MM-DD HH:mm:ss\",\n                    minWidth: 150\n                }\n            ]\n        }\n    };\n}\n","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport type { PropType } from \"vue\";\nimport type { Components } from \"/#/components\";\nimport { ref, reactive } from \"vue\";\nimport systemAPI from \"@api/system\";\nimport { ElMessage } from \"element-plus\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'add-form-dialog',\n  props: {\n    // 是否显示弹窗\n    isShow: {\n        type: Boolean,\n        default: false\n    },\n    moduleList: {\n        type: Array as PropType<Record<string, any>[]>,\n        default: function () {\n            return [];\n        }\n    },\n    roleList: {\n        type: Array as PropType<Record<string, any>[]>,\n        default: function () {\n            return [];\n        }\n    }\n},\n  emits: [\"update:isShow\", \"refresh\"],\n  setup(__props, { emit: __emit }) {\n\nconst props = __props;\n\nconst emits = __emit;\n\nconst dialogFormRef = ref<Components.DialogFormRef>();\n\n// 输入表单信息\nconst inputForm = reactive<Components.InputForm>({\n    fields: [\n        {\n            name: \"moduleCode\",\n            label: \"所属模块\",\n            type: \"select\",\n            data: props.moduleList.map(item => ({ label: item.name + \"(\" + item.code + \")\", value: item.code }))\n        },\n        {\n            name: \"roles\",\n            label: \"角色\",\n            type: \"select\",\n            props: {\n                multiple: true\n            },\n            data: []\n        },\n        {\n            name: \"title\",\n            label: \"名称\",\n            type: \"input\",\n            props: {\n                maxlength: 20\n            },\n            rules: [{ required: true, message: \"请填写\" }]\n        },\n        {\n            name: \"content\",\n            label: \"内容\",\n            type: \"input\",\n            props: {\n                rows: 4,\n                type: \"textarea\"\n            },\n            rules: [{ required: true, message: \"请填写\" }]\n        }\n    ]\n});\n\n// 底部按钮列表\nconst buttons = ref<Components.FormButton[]>([\n    {\n        text: \"取消\"\n    },\n    {\n        text: \"保存\",\n        props: { type: \"primary\" },\n        click: async function (inputFormValue) {\n            await dialogFormRef.value?.validate();\n            if (inputFormValue.roles) {\n                inputFormValue.roles = inputFormValue.roles.join(\",\");\n            }\n            await systemAPI.insertMessage(inputFormValue);\n            ElMessage.success(\"操作成功\");\n            emits(\"refresh\");\n        }\n    }\n]);\n// 表单字段变化\nconst fieldValueChangeHandle = async function (field: Components.InputFormField, fieldValue: string, formFields: Components.InputFormField[], inputValue: Record<string, any>) {\n    if (field.name === \"moduleCode\") {\n        // 所属模块数据变化\n        inputValue.roles = [];\n        if (fieldValue) {\n            formFields.find(field => field.name === \"roles\")!.data = props.roleList\n                .filter(item => item.moduleCode === fieldValue)\n                .map(item => ({ label: item.name + \"(\" + item.code + \")\", value: item.code }));\n        } else {\n            formFields.find(field => field.name === \"roles\")!.data = [];\n        }\n    }\n};\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_dialog_form = _resolveComponent(\"dialog-form\")!\n\n  return (_openBlock(), _createBlock(_component_dialog_form, {\n    ref_key: \"dialogFormRef\",\n    ref: dialogFormRef,\n    class: \"menu-info-form\",\n    isShow: __props.isShow,\n    buttons: buttons.value,\n    inputFormProps: inputForm,\n    dialogProps: { title: '发送站内信', width: '600px' },\n    onFieldValueChange: fieldValueChangeHandle,\n    onClose: _cache[0] || (_cache[0] = ($event: any) => (emits('update:isShow', false)))\n  }, null, 8, [\"isShow\", \"buttons\", \"inputFormProps\"]))\n}\n}\n\n})","<template>\n    <dialog-form\n        ref=\"dialogFormRef\"\n        class=\"menu-info-form\"\n        :isShow=\"isShow\"\n        :buttons=\"buttons\"\n        :inputFormProps=\"inputForm\"\n        :dialogProps=\"{ title: '发送站内信', width: '600px' }\"\n        @fieldValueChange=\"fieldValueChangeHandle\"\n        @close=\"emits('update:isShow', false)\"\n    />\n</template>\n<script setup lang=\"ts\">\nimport type { PropType } from \"vue\";\nimport type { Components } from \"/#/components\";\nimport { ref, reactive } from \"vue\";\nimport systemAPI from \"@api/system\";\nimport { ElMessage } from \"element-plus\";\n\nconst props = defineProps({\n    // 是否显示弹窗\n    isShow: {\n        type: Boolean,\n        default: false\n    },\n    moduleList: {\n        type: Array as PropType<Record<string, any>[]>,\n        default: function () {\n            return [];\n        }\n    },\n    roleList: {\n        type: Array as PropType<Record<string, any>[]>,\n        default: function () {\n            return [];\n        }\n    }\n});\n\nconst emits = defineEmits([\"update:isShow\", \"refresh\"]);\n\nconst dialogFormRef = ref<Components.DialogFormRef>();\n\n// 输入表单信息\nconst inputForm = reactive<Components.InputForm>({\n    fields: [\n        {\n            name: \"moduleCode\",\n            label: \"所属模块\",\n            type: \"select\",\n            data: props.moduleList.map(item => ({ label: item.name + \"(\" + item.code + \")\", value: item.code }))\n        },\n        {\n            name: \"roles\",\n            label: \"角色\",\n            type: \"select\",\n            props: {\n                multiple: true\n            },\n            data: []\n        },\n        {\n            name: \"title\",\n            label: \"名称\",\n            type: \"input\",\n            props: {\n                maxlength: 20\n            },\n            rules: [{ required: true, message: \"请填写\" }]\n        },\n        {\n            name: \"content\",\n            label: \"内容\",\n            type: \"input\",\n            props: {\n                rows: 4,\n                type: \"textarea\"\n            },\n            rules: [{ required: true, message: \"请填写\" }]\n        }\n    ]\n});\n\n// 底部按钮列表\nconst buttons = ref<Components.FormButton[]>([\n    {\n        text: \"取消\"\n    },\n    {\n        text: \"保存\",\n        props: { type: \"primary\" },\n        click: async function (inputFormValue) {\n            await dialogFormRef.value?.validate();\n            if (inputFormValue.roles) {\n                inputFormValue.roles = inputFormValue.roles.join(\",\");\n            }\n            await systemAPI.insertMessage(inputFormValue);\n            ElMessage.success(\"操作成功\");\n            emits(\"refresh\");\n        }\n    }\n]);\n// 表单字段变化\nconst fieldValueChangeHandle = async function (field: Components.InputFormField, fieldValue: string, formFields: Components.InputFormField[], inputValue: Record<string, any>) {\n    if (field.name === \"moduleCode\") {\n        // 所属模块数据变化\n        inputValue.roles = [];\n        if (fieldValue) {\n            formFields.find(field => field.name === \"roles\")!.data = props.roleList\n                .filter(item => item.moduleCode === fieldValue)\n                .map(item => ({ label: item.name + \"(\" + item.code + \")\", value: item.code }));\n        } else {\n            formFields.find(field => field.name === \"roles\")!.data = [];\n        }\n    }\n};\n</script>\n","import script from \"./add-form-dialog.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./add-form-dialog.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, mergeProps as _mergeProps } from \"vue\"\n\nimport type { Components } from \"/#/components\";\nimport { ref, reactive } from \"vue\";\nimport systemAPI from \"@api/system\";\nimport searchConfig from \"./search-config\";\nimport addFormDialog from \"./components/add-form-dialog.vue\";\n\n// search page 组件\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\nconst searchPageRef = ref<Components.SearchPageRef>();\n\n// 是否显示信息弹窗\nconst isShowAddDialog = ref(false);\n\n// 模块列表\nconst moduleList = ref<Record<string, any>[]>([]);\n\n// 角色列表\nconst roleList = ref<Record<string, any>[]>([]);\n\n// 数据刷新操作\nconst refreshHandle = async function () {\n    await searchPageRef.value!.query();\n};\n\n// 显示新增信息弹窗\nconst showDialogHandle = function () {\n    isShowAddDialog.value = true;\n};\n\n// 搜索页配置数据\nconst searchConfigData = reactive(searchConfig({ showDialogHandle }));\n\nconst init = async function () {\n    // 查询模块列表\n    moduleList.value = ((await systemAPI.queryModuleList({})) as Array<Record<string, any>>) || [];\n\n    // 查询角色列表\n    roleList.value = ((await systemAPI.queryRoleList({})) as Array<Record<string, any>>) || [];\n\n    if (moduleList.value.length > 0) {\n        // 设置模块筛选项中的下拉框数据\n        searchPageRef.value?.changeFormFields(formFields => {\n            formFields.find(item => {\n                if (item.name === \"module\") {\n                    item.data = moduleList.value.map(item => ({ label: item.name, value: item.code }));\n                    return true;\n                }\n                return false;\n            });\n        });\n        // 设置数据表格中的模块信息回显\n        searchConfigData.dataTableProps.columns.find(item => {\n            if (item.prop === \"moduleCode\") {\n                item.data = moduleList.value.map(item => ({ label: item.name, value: item.code }));\n                return true;\n            }\n            return false;\n        });\n    }\n    if (roleList.value.length > 0) {\n        // 设置数据表格中角色信息回显\n        searchConfigData.dataTableProps.columns.find(item => {\n            if (item.prop === \"roles\") {\n                item.data = roleList.value.map(item => ({ label: item.name, value: item.code }));\n                return true;\n            }\n            return false;\n        });\n    }\n};\n\ninit();\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_tag = _resolveComponent(\"el-tag\")!\n  const _component_search_page = _resolveComponent(\"search-page\")!\n\n  return (_openBlock(), _createBlock(_component_search_page, _mergeProps(searchConfigData, {\n    ref_key: \"searchPageRef\",\n    ref: searchPageRef\n  }), {\n    dataTable_status: _withCtx((scope) => [\n      (scope.row.status === '0')\n        ? (_openBlock(), _createBlock(_component_el_tag, {\n            key: 0,\n            type: \"info\"\n          }, {\n            default: _withCtx(() => [\n              _createTextVNode(\"发送中\")\n            ]),\n            _: 1\n          }))\n        : (scope.row.status === '1')\n          ? (_openBlock(), _createBlock(_component_el_tag, {\n              key: 1,\n              type: \"success\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(\"发送完成\")\n              ]),\n              _: 1\n            }))\n          : (scope.row.status === '2')\n            ? (_openBlock(), _createBlock(_component_el_tag, {\n                key: 2,\n                type: \"danger\"\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(\"发送失败\")\n                ]),\n                _: 1\n              }))\n            : _createCommentVNode(\"\", true)\n    ]),\n    default: _withCtx(() => [\n      (isShowAddDialog.value)\n        ? (_openBlock(), _createBlock(addFormDialog, {\n            key: 0,\n            isShow: isShowAddDialog.value,\n            \"onUpdate:isShow\": _cache[0] || (_cache[0] = ($event: any) => ((isShowAddDialog).value = $event)),\n            moduleList: moduleList.value,\n            roleList: roleList.value,\n            onRefresh: refreshHandle\n          }, null, 8, [\"isShow\", \"moduleList\", \"roleList\"]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _: 1\n  }, 16))\n}\n}\n\n})","<!--\n * @创建者: yujinjin9@126.com\n * @创建时间: 2024-01-16 15:15:37\n * @最后修改作者: yujinjin9@126.com\n * @最后修改时间: 2024-01-16 17:24:44\n * @项目的路径: \\vue-manager-system\\src\\views\\system\\messages\\index.vue\n * @描述: 站内信页面\n-->\n<template>\n    <search-page v-bind=\"searchConfigData\" ref=\"searchPageRef\">\n        <template #dataTable_status=\"scope\">\n            <el-tag v-if=\"scope.row.status === '0'\" type=\"info\">发送中</el-tag>\n            <el-tag v-else-if=\"scope.row.status === '1'\" type=\"success\">发送完成</el-tag>\n            <el-tag v-else-if=\"scope.row.status === '2'\" type=\"danger\">发送失败</el-tag>\n        </template>\n        <add-form-dialog v-if=\"isShowAddDialog\" v-model:isShow=\"isShowAddDialog\" :moduleList=\"moduleList\" :roleList=\"roleList\" @refresh=\"refreshHandle\" />\n    </search-page>\n</template>\n<script setup lang=\"ts\">\nimport type { Components } from \"/#/components\";\nimport { ref, reactive } from \"vue\";\nimport systemAPI from \"@api/system\";\nimport searchConfig from \"./search-config\";\nimport addFormDialog from \"./components/add-form-dialog.vue\";\n\n// search page 组件\nconst searchPageRef = ref<Components.SearchPageRef>();\n\n// 是否显示信息弹窗\nconst isShowAddDialog = ref(false);\n\n// 模块列表\nconst moduleList = ref<Record<string, any>[]>([]);\n\n// 角色列表\nconst roleList = ref<Record<string, any>[]>([]);\n\n// 数据刷新操作\nconst refreshHandle = async function () {\n    await searchPageRef.value!.query();\n};\n\n// 显示新增信息弹窗\nconst showDialogHandle = function () {\n    isShowAddDialog.value = true;\n};\n\n// 搜索页配置数据\nconst searchConfigData = reactive(searchConfig({ showDialogHandle }));\n\nconst init = async function () {\n    // 查询模块列表\n    moduleList.value = ((await systemAPI.queryModuleList({})) as Array<Record<string, any>>) || [];\n\n    // 查询角色列表\n    roleList.value = ((await systemAPI.queryRoleList({})) as Array<Record<string, any>>) || [];\n\n    if (moduleList.value.length > 0) {\n        // 设置模块筛选项中的下拉框数据\n        searchPageRef.value?.changeFormFields(formFields => {\n            formFields.find(item => {\n                if (item.name === \"module\") {\n                    item.data = moduleList.value.map(item => ({ label: item.name, value: item.code }));\n                    return true;\n                }\n                return false;\n            });\n        });\n        // 设置数据表格中的模块信息回显\n        searchConfigData.dataTableProps.columns.find(item => {\n            if (item.prop === \"moduleCode\") {\n                item.data = moduleList.value.map(item => ({ label: item.name, value: item.code }));\n                return true;\n            }\n            return false;\n        });\n    }\n    if (roleList.value.length > 0) {\n        // 设置数据表格中角色信息回显\n        searchConfigData.dataTableProps.columns.find(item => {\n            if (item.prop === \"roles\") {\n                item.data = roleList.value.map(item => ({ label: item.name, value: item.code }));\n                return true;\n            }\n            return false;\n        });\n    }\n};\n\ninit();\n</script>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["login","inputData","ajaxOptions","request","Object","assign","url","data","sendValidateCode","method","queryUnreadMessages","queryLoginUserMenus","updateLoginPassword","updateLoginUserInfo","queryPageModuleList","params","queryModuleList","addOrUpdateModule","deleteModuleById","id","queryPageMenuList","queryMenuList","addOrUpdateMenu","toggleMenuLockStatus","queryRoleListByMenuId","deleteMenu","uploadMenusExcel","file","commonApi","upload","batchInsertMenus","queryPageRoleList","queryRoleList","queryMenuListByRoleId","addOrUpdateRole","toggleRoleLockStatus","updateMenusByRoleId","deleteRole","uploadRolesExcel","batchInsertRoles","queryPageUserList","queryRoleListByUserId","addOrUpdateUser","updateRoleListByUserId","deleteUser","toggleUserLockStatus","resetUerPassword","uploadUsersExcel","batchInsertUers","queryPageMessageList","insertMessage","showDialogHandle","searchFormProps","isShowCollapse","fields","name","type","label","actionBarProps","buttons","text","handleCode","HANDLE_CODES","CREATE","click","props","dataTableProps","query","systemAPI","columns","prop","minWidth","showOverflowTooltip","width","slot","formate","_defineComponent","__name","isShow","Boolean","default","moduleList","Array","roleList","emits","setup","__props","emit","__emit","dialogFormRef","ref","inputForm","reactive","map","item","code","value","multiple","maxlength","rules","required","message","rows","async","inputFormValue","validate","roles","join","ElMessage","success","fieldValueChangeHandle","field","fieldValue","formFields","inputValue","find","filter","moduleCode","_ctx","_cache","_component_dialog_form","_resolveComponent","_openBlock","_createBlock","ref_key","class","inputFormProps","dialogProps","title","onFieldValueChange","onClose","$event","__exports__","searchPageRef","isShowAddDialog","refreshHandle","searchConfigData","searchConfig","init","length","changeFormFields","_component_el_tag","_component_search_page","_mergeProps","dataTable_status","_withCtx","scope","row","status","key","_createTextVNode","_","_createCommentVNode","addFormDialog","onRefresh"],"sourceRoot":""}