{"version":3,"file":"build/js/718.62913c42.js","mappings":"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","sources":["webpack://vue-manager-system/./src/views/components/virtually-progress.vue?a0ce","webpack://vue-manager-system/./src/views/components/virtually-progress.vue","webpack://vue-manager-system/./src/views/components/virtually-progress.vue?1bc1","webpack://vue-manager-system/./src/api/demo.ts","webpack://vue-manager-system/./src/views/plays/order-list/constants.ts","webpack://vue-manager-system/./src/views/plays/order-list/search-config.ts","webpack://vue-manager-system/./src/views/components/customer-column-dialog.vue?10fa","webpack://vue-manager-system/./src/views/components/customer-column-dialog.vue","webpack://vue-manager-system/./src/views/components/customer-column-dialog.vue?626f","webpack://vue-manager-system/./src/views/plays/order-list/components/table-column-copy.vue?037c","webpack://vue-manager-system/./src/views/plays/order-list/components/table-column-copy.vue","webpack://vue-manager-system/./src/views/plays/order-list/components/table-column-copy.vue?21ba","webpack://vue-manager-system/./src/views/plays/order-list/components/view-order-details-dialog.vue?3962","webpack://vue-manager-system/./src/views/plays/order-list/components/view-order-details-dialog.vue","webpack://vue-manager-system/./src/views/plays/order-list/components/view-order-details-dialog.vue?31a4","webpack://vue-manager-system/./src/views/plays/order-list/components/excel-export-dialog.vue?95a3","webpack://vue-manager-system/./src/views/plays/order-list/components/excel-export-dialog.vue","webpack://vue-manager-system/./src/views/plays/order-list/components/excel-export-dialog.vue?3b6c","webpack://vue-manager-system/./src/views/plays/order-list/components/add-or-update-form-dialog.vue?f2cd","webpack://vue-manager-system/./src/views/plays/order-list/components/add-or-update-form-dialog.vue","webpack://vue-manager-system/./src/views/plays/order-list/components/add-or-update-form-dialog.vue?007b","webpack://vue-manager-system/./src/views/plays/order-list/index.vue?29fa","webpack://vue-manager-system/./src/views/plays/order-list/index.vue","webpack://vue-manager-system/./src/views/plays/order-list/index.vue?7dd4"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, mergeProps as _mergeProps, createVNode as _createVNode, renderSlot as _renderSlot, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-97ea7fae\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"virtually-progress\" }\nconst _hoisted_2 = { class: \"tips-text\" }\n\nimport type { PropType } from \"vue\";\nimport type { ProgressProps } from \"element-plus\";\nimport { onUnmounted, ref, watch, onMounted, computed } from \"vue\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'virtually-progress',\n  props: {\n    // 实际进度是否完成\n    finished: {\n        type: Boolean,\n        default: false\n    },\n    // 进度条成长的比例,数值在(0, 1)之间\n    ratio: {\n        type: Number,\n        default: 0.1,\n        validator: function (value: number) {\n            return value < 1 && value > 0;\n        }\n    },\n    // 进度条成长变化的间隔时间(单位：毫秒)\n    time: {\n        type: Number,\n        default: 500\n    },\n    progress: {\n        type: Object as PropType<ProgressProps>,\n        default: function () {\n            return {};\n        }\n    }\n},\n  emits: [\"afterFinished\"],\n  setup(__props, { emit: __emit }) {\n\nconst props = __props;\n\n// 进度条完成之后事件\nconst emits = __emit;\n\n// 进度条值\nconst percentage = ref(0);\n\n// 定时器ID\nlet timeIntervalId = 0;\n\nwatch(\n    () => props.finished,\n    value => {\n        if (!value) {\n            start();\n        }\n    }\n);\n\n// 进度条自定义属性\nconst progressAttributes = computed<ProgressProps>(() => {\n    return Object.assign({ textInside: true, strokeWidth: 26 }, props.progress);\n});\n\n// 开始运行\nconst start = function () {\n    percentage.value = 0;\n    if (timeIntervalId) {\n        window.clearInterval(timeIntervalId);\n    }\n    let ratio = props.ratio;\n    let times = 0;\n    timeIntervalId = window.setInterval(() => {\n        ++times;\n        if (percentage.value === 100) {\n            window.clearInterval(timeIntervalId);\n            timeIntervalId = 0;\n            // 进度条动画执行完成\n            emits(\"afterFinished\");\n            return;\n        } else if (percentage.value > 95 && props.finished) {\n            percentage.value = 100;\n            return;\n        } else if (props.finished) {\n            // 当前实际动作已经执行完成，这里加快精度条成长\n            ratio = 1;\n        } else if (percentage.value > 80) {\n            ratio = 2 * props.ratio;\n        } else {\n            ratio = props.ratio * (times % 10);\n        }\n        percentage.value = parseInt((percentage.value + (99 - percentage.value) * ratio * Math.random()).toFixed(4), 10);\n    }, props.time);\n};\n\nonMounted(() => {\n    start();\n});\n\nonUnmounted(() => {\n    if (timeIntervalId) {\n        window.clearInterval(timeIntervalId);\n    }\n});\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_progress = _resolveComponent(\"el-progress\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createVNode(_component_el_progress, _mergeProps(progressAttributes.value, { percentage: percentage.value }), null, 16, [\"percentage\"]),\n    _createElementVNode(\"div\", _hoisted_2, [\n      _renderSlot(_ctx.$slots, \"default\")\n    ])\n  ]))\n}\n}\n\n})","<!--\n * @创建者: yujinjin9@126.com\n * @创建时间: 2024-01-04 11:23:48\n * @最后修改作者: yujinjin9@126.com\n * @最后修改时间: 2024-03-05 17:14:09\n * @项目的路径: \\vue-manager-system\\src\\views\\components\\virtually-progress.vue\n * @描述: 虚构的进度条\n-->\n<template>\n    <div class=\"virtually-progress\">\n        <el-progress v-bind=\"progressAttributes\" :percentage=\"percentage\" />\n        <div class=\"tips-text\"><slot></slot></div>\n    </div>\n</template>\n<script setup lang=\"ts\">\nimport type { PropType } from \"vue\";\nimport type { ProgressProps } from \"element-plus\";\nimport { onUnmounted, ref, watch, onMounted, computed } from \"vue\";\n\nconst props = defineProps({\n    // 实际进度是否完成\n    finished: {\n        type: Boolean,\n        default: false\n    },\n    // 进度条成长的比例,数值在(0, 1)之间\n    ratio: {\n        type: Number,\n        default: 0.1,\n        validator: function (value: number) {\n            return value < 1 && value > 0;\n        }\n    },\n    // 进度条成长变化的间隔时间(单位：毫秒)\n    time: {\n        type: Number,\n        default: 500\n    },\n    progress: {\n        type: Object as PropType<ProgressProps>,\n        default: function () {\n            return {};\n        }\n    }\n});\n\n// 进度条完成之后事件\nconst emits = defineEmits([\"afterFinished\"]);\n\n// 进度条值\nconst percentage = ref(0);\n\n// 定时器ID\nlet timeIntervalId = 0;\n\nwatch(\n    () => props.finished,\n    value => {\n        if (!value) {\n            start();\n        }\n    }\n);\n\n// 进度条自定义属性\nconst progressAttributes = computed<ProgressProps>(() => {\n    return Object.assign({ textInside: true, strokeWidth: 26 }, props.progress);\n});\n\n// 开始运行\nconst start = function () {\n    percentage.value = 0;\n    if (timeIntervalId) {\n        window.clearInterval(timeIntervalId);\n    }\n    let ratio = props.ratio;\n    let times = 0;\n    timeIntervalId = window.setInterval(() => {\n        ++times;\n        if (percentage.value === 100) {\n            window.clearInterval(timeIntervalId);\n            timeIntervalId = 0;\n            // 进度条动画执行完成\n            emits(\"afterFinished\");\n            return;\n        } else if (percentage.value > 95 && props.finished) {\n            percentage.value = 100;\n            return;\n        } else if (props.finished) {\n            // 当前实际动作已经执行完成，这里加快精度条成长\n            ratio = 1;\n        } else if (percentage.value > 80) {\n            ratio = 2 * props.ratio;\n        } else {\n            ratio = props.ratio * (times % 10);\n        }\n        percentage.value = parseInt((percentage.value + (99 - percentage.value) * ratio * Math.random()).toFixed(4), 10);\n    }, props.time);\n};\n\nonMounted(() => {\n    start();\n});\n\nonUnmounted(() => {\n    if (timeIntervalId) {\n        window.clearInterval(timeIntervalId);\n    }\n});\n</script>\n<style lang=\"scss\" scoped>\n.virtually-progress {\n    width: 100%;\n\n    .tips-text {\n        padding-top: 12px;\n        text-align: center;\n        font-size: 12px;\n    }\n}\n</style>\n","import script from \"./virtually-progress.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./virtually-progress.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./virtually-progress.vue?vue&type=style&index=0&id=97ea7fae&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-97ea7fae\"]])\n\nexport default __exports__","/*\n * @创建者: yujinjin9@126.com\n * @创建时间: 2023-01-06 15:33:53\n * @最后修改作者: yujinjin9@126.com\n * @最后修改时间: 2024-03-07 14:59:02\n * @项目的路径: \\vue-manager-system\\src\\api\\demo.ts\n * @描述: demo 查询API\n */\nimport request from \"./request\";\nimport type { Http } from \"../../types/http\";\n\nexport default {\n    /**\n     * 常用页面 demo 分页查询列表\n     */\n    queryPageListForCommon(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    // /api/show/plan/list(模拟资源位的计划列表)\n                    url: \"/demo/queryPageList\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 获取配置数据\n     */\n    queryConfigData(ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    // /api/show/rule/configCache.do(模拟资源位的配置数据)\n                    url: \"/demo/config.do\"\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 分页查询订单列表(demo演示页面)\n     */\n    queryPageOrderList(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/demo/queryPageOrderList\",\n                    method: \"GET\",\n                    params: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 新增订单信息\n     */\n    addOrder(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"http://10.96.144.203:8081/demo/addOrder\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 查询订单详情信息(demo演示页面)\n     */\n    queryOrderDetails(orderNo: string, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/demo/queryOrderDetails\",\n                    method: \"GET\",\n                    params: { orderNo }\n                },\n                ajaxOptions || {}\n            )\n        );\n    },\n\n    /**\n     * 批量修改订单状态(demo演示页面)\n     */\n    batchUpdateOrderStatus(inputData: Record<string, any>, ajaxOptions?: Http.RequestConfig) {\n        return request(\n            Object.assign(\n                {\n                    url: \"/demo/batchUpdateOrderStatus\",\n                    data: inputData\n                },\n                ajaxOptions || {}\n            )\n        );\n    }\n};\n","/*\n * @创建者: yujinjin9@126.com\n * @创建时间: 2024-01-26 10:48:24\n * @最后修改作者: yujinjin9@126.com\n * @最后修改时间: 2024-01-26 10:54:25\n * @项目的路径: \\vue-manager-system\\src\\views\\plays\\order-list\\constants.ts\n * @描述: 订单常量数据\n */\n\n// 下单设备来源枚举值\nexport const DEVICE_SOURCE_ENUM = [\n    {\n        value: \"H5\",\n        label: \"移动端H5\"\n    },\n    {\n        value: \"H5\",\n        label: \"微信H5\"\n    },\n    {\n        value: \"WXXCX\",\n        label: \"微信小程序\"\n    },\n    {\n        value: \"iOSApp\",\n        label: \"iOS App\"\n    },\n    {\n        value: \"androidApp\",\n        label: \"android App\"\n    }\n];\n\n// 订单状态枚举值\nexport const ORDER_STATUS_ENUM = [\n    {\n        label: \"订单取消\",\n        value: -1\n    },\n    {\n        label: \"售后中\",\n        value: -6\n    },\n    {\n        label: \"退款中\",\n        value: -7\n    },\n    {\n        label: \"已退款\",\n        value: -5\n    },\n    {\n        label: \"待付款\",\n        value: 10\n    },\n    {\n        label: \"待发货\",\n        value: 20\n    },\n    {\n        label: \"已发货\",\n        value: 30\n    },\n    {\n        label: \"已签收\",\n        value: 40\n    },\n    {\n        label: \"交易关闭\",\n        value: 50\n    }\n];\n\n// 支付方式\nexport const PAY_WAY_ENUM = [\n    {\n        label: \"现金\",\n        value: \"cash\"\n    },\n    {\n        label: \"支付宝\",\n        value: \"zfb\"\n    },\n    {\n        label: \"微信\",\n        value: \"wx\"\n    },\n    {\n        label: \"银行卡\",\n        value: \"bankcard\"\n    },\n    {\n        label: \"账户余额\",\n        value: \"balance\"\n    },\n    {\n        label: \"0元订单\",\n        value: \"free\"\n    }\n];\n","/*\n * @创建者: yujinjin9@126.com\n * @创建时间: 2024-01-19 10:26:09\n * @最后修改作者: yujinjin9@126.com\n * @最后修改时间: 2024-03-05 17:43:42\n * @项目的路径: \\vue-manager-system\\src\\views\\plays\\order-list\\search-config.ts\n * @描述: 订单查询配置\n */\nimport type { Components } from \"/#/components\";\nimport dayjs from \"dayjs\";\nimport demoAPI from \"@api/demo\";\nimport { HANDLE_CODES } from \"@/services/constants\";\nimport { DEVICE_SOURCE_ENUM, ORDER_STATUS_ENUM } from \"./constants\";\n\nexport default function ({ showDialogHandle, excelExportHandle, cancelOrderHandle, orertReportData }) {\n    return {\n        searchFormProps: {\n            fields: [\n                {\n                    name: \"orderNo\",\n                    type: \"input\",\n                    label: \"订单编号\"\n                },\n                // {\n                //     name: \"orderStatus\",\n                //     type: \"select\",\n                //     label: \"订单状态\",\n                //     data: ORDER_STATUS_ENUM\n                // },\n                {\n                    name: \"deviceSource\",\n                    type: \"select\",\n                    label: \"下单设备\",\n                    data: DEVICE_SOURCE_ENUM\n                },\n                {\n                    name: \"buyer\",\n                    type: \"input\",\n                    label: \"用户ID/名称\"\n                },\n                {\n                    name: \"receiver\",\n                    type: \"input\",\n                    label: \"收货人姓名\"\n                },\n                {\n                    name: \"receiverMobileNumber\",\n                    type: \"input\",\n                    label: \"收货人手机号\"\n                },\n                {\n                    name: \"dateRange\",\n                    type: \"datePicker\",\n                    label: \"订单日期\",\n                    props: {\n                        type: \"daterange\"\n                    },\n                    value: [dayjs().add(-6, \"day\").format(\"YYYY-MM-DD\"), dayjs().format(\"YYYY-MM-DD\")]\n                }\n            ] as Components.SearchFormField[]\n        },\n        actionBarProps: {\n            align: \"right\",\n            buttons: [\n                {\n                    text: \"新增订单\",\n                    handleCode: HANDLE_CODES.CREATE,\n                    click: showDialogHandle,\n                    props: {\n                        type: \"primary\"\n                    }\n                },\n                {\n                    text: \"批量取消订单\",\n                    handleCode: HANDLE_CODES.BATCHCANCEL,\n                    click: cancelOrderHandle,\n                    props: {\n                        disabled: true\n                    }\n                },\n                {\n                    text: \"自定义列\",\n                    handleCode: HANDLE_CODES.QUERY,\n                    click: showDialogHandle\n                },\n                {\n                    text: \"导出Excel\",\n                    handleCode: HANDLE_CODES.EXPORT,\n                    click: excelExportHandle\n                }\n            ]\n        },\n        dataTableProps: {\n            filters: {\n                orderStatus: \"\"\n            },\n            query: demoAPI.queryPageOrderList,\n            // 查询参数处理\n            queryParametersProcess(parameters: any) {\n                if (parameters.dateRange && parameters.dateRange.length > 0) {\n                    parameters.startDate = parameters.dateRange[0];\n                    parameters.endDate = parameters.dateRange[1];\n                }\n                delete parameters.dateRange;\n                return parameters;\n            },\n            queryResponseProcess(queryResult: Record<string, any>) {\n                orertReportData.allCount = queryResult.allCount || 0;\n                orertReportData.pendingCount = queryResult.pendingCount || 0;\n                orertReportData.paidCount = queryResult.paidCount || 0;\n                orertReportData.deliveredCount = queryResult.deliveredCount || 0;\n                orertReportData.completedCount = queryResult.completedCount || 0;\n                orertReportData.cancelledCount = queryResult.cancelledCount || 0;\n                orertReportData.refundedCount = queryResult.refundedCount || 0;\n                return { total: queryResult.total, rows: queryResult.rows };\n            },\n            columns: [\n                {\n                    label: \"选择\",\n                    type: \"selection\",\n                    align: \"center\",\n                    width: 50\n                },\n                {\n                    label: \"订单编号\",\n                    prop: \"orderNo\",\n                    minWidth: 150,\n                    slot: \"dataTable_orderNo\"\n                },\n                {\n                    label: \"订单状态\",\n                    prop: \"orderStatus\",\n                    type: \"enum\",\n                    slotHeader: \"dataTable_orderStatusHeader\",\n                    width: 100,\n                    data: ORDER_STATUS_ENUM\n                },\n                {\n                    label: \"下单设备\",\n                    prop: \"deviceSource\",\n                    type: \"enum\",\n                    width: 100,\n                    data: DEVICE_SOURCE_ENUM\n                },\n                {\n                    label: \"订单金额\",\n                    prop: \"orderAmount\",\n                    type: \"number\",\n                    digit: 2,\n                    width: 100\n                },\n                {\n                    label: \"实际支付金额\",\n                    prop: \"payAmount\",\n                    type: \"number\",\n                    digit: 2,\n                    width: 120\n                },\n                {\n                    label: \"订单时间\",\n                    prop: \"createTime\",\n                    type: \"date\",\n                    formate: \"YYYY-MM-DD HH:mm:ss\",\n                    width: 140\n                },\n                {\n                    label: \"支付时间\",\n                    prop: \"payTime\",\n                    type: \"date\",\n                    formate: \"YYYY-MM-DD HH:mm:ss\",\n                    width: 140\n                },\n                {\n                    label: \"订单商品数量\",\n                    prop: \"goodsNumber\",\n                    width: 120\n                },\n                {\n                    label: \"订单商品数量\",\n                    prop: \"goodsNumber\",\n                    width: 120\n                },\n                {\n                    label: \"订单商品图片\",\n                    prop: \"goodsImgs\",\n                    type: \"image\",\n                    separator: \",\",\n                    minWidth: 150\n                },\n                {\n                    label: \"下单用户ID\",\n                    prop: \"buyerId\",\n                    minWidth: 150\n                },\n                {\n                    label: \"下单用户名称\",\n                    prop: \"buyerName\",\n                    minWidth: 100\n                },\n                {\n                    label: \"下单用户手机号\",\n                    prop: \"buyerMobileNumber\",\n                    minWidth: 120\n                },\n                {\n                    label: \"收货人\",\n                    prop: \"receiver\",\n                    minWidth: 100\n                },\n                {\n                    label: \"收货人电话\",\n                    prop: \"receiverMobileNumber\",\n                    minWidth: 100\n                },\n                {\n                    label: \"订单备注\",\n                    prop: \"remark\",\n                    minWidth: 150,\n                    showOverflowTooltip: true\n                },\n                {\n                    type: \"action\",\n                    width: 120,\n                    buttons: [\n                        {\n                            text: \"查看\",\n                            handleCode: HANDLE_CODES.SEARCH,\n                            click: showDialogHandle\n                        },\n                        {\n                            text: \"取消订单\",\n                            handleCode: HANDLE_CODES.CANCEL,\n                            display: function (row) {\n                                return row.orderStatus === 10;\n                            },\n                            click: cancelOrderHandle\n                        }\n                    ]\n                }\n            ] as Components.TableColumn<any>[]\n        }\n    };\n}\n","import { defineComponent as _defineComponent } from 'vue'\nimport { unref as _unref, resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withModifiers as _withModifiers, withCtx as _withCtx, vShow as _vShow, createBlock as _createBlock, withDirectives as _withDirectives } from \"vue\"\n\nconst _hoisted_1 = { class: \"search-panel\" }\nconst _hoisted_2 = { class: \"column-list-panel\" }\nconst _hoisted_3 = { class: \"left-contents\" }\nconst _hoisted_4 = {\n  key: 0,\n  class: \"loading-text\"\n}\nconst _hoisted_5 = {\n  key: 1,\n  class: \"empty-text\"\n}\nconst _hoisted_6 = {\n  key: 2,\n  class: \"checkbox-list-wrapper\"\n}\nconst _hoisted_7 = [\"title\"]\nconst _hoisted_8 = {\n  key: 3,\n  class: \"checkbox-list-wrapper\"\n}\nconst _hoisted_9 = [\"title\"]\nconst _hoisted_10 = { class: \"right-contents\" }\nconst _hoisted_11 = { class: \"header-row\" }\nconst _hoisted_12 = { class: \"label-text\" }\nconst _hoisted_13 = { class: \"inner-row\" }\nconst _hoisted_14 = [\"title\"]\nconst _hoisted_15 = { class: \"error-tips\" }\n\nimport type { PropType } from \"vue\";\nimport type { Components } from \"/#/components\";\nimport { computed, ref } from \"vue\";\nimport { Search, Delete } from \"@element-plus/icons-vue\";\nimport { debounce } from \"@yujinjin/utils\";\nimport { getValue, setValue } from \"@/services/local-storage\";\n\n/** 分组的单个数据列(父组件传过来的数值) */\ninterface GroupColumnData {\n    // 组key值\n    key: string;\n\n    // 组中文名称\n    name: string;\n\n    // 分组数据列的key值集合\n    childList: Array<string>;\n}\n\n/** 自定义弹窗中定义的数据列（不分组） */\ninterface CustomerColumnData {\n    // 数据列key值\n    key: string;\n\n    // 数据列中文名称\n    name: string;\n\n    // 数据列是否显示\n    isShow: boolean;\n\n    // 数据列是否禁用选择\n    disabled: boolean;\n\n    // 数据列是否被选中\n    selected: boolean;\n}\n\n/** 自定义弹窗中定义的分组数据列（有分组） */\ninterface CustomerGroupColumnData {\n    // 数据列key值\n    key: string;\n\n    // 数据列中文名称\n    name: string;\n\n    // 数据列是否显示\n    isShow: boolean;\n\n    // 数据列是否被选中\n    selected: boolean;\n\n    // 复选框的不确定状态\n    indeterminate: boolean;\n\n    // 分组数据列的key值集合\n    childList: Array<CustomerColumnData>;\n}\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'customer-column-dialog',\n  props: {\n    // 是否显示弹窗\n    isShow: {\n        type: Boolean\n    },\n    // 固定展示自定义列的key，如果不传值取tableColumns中的fixed属性值来判断，如果传空数组表示没有固定展示的自定义列\n    fixedColumnKeys: {\n        type: Array as PropType<string[]>\n    },\n    // 本地存储列表名称的key值, 如果值为空就不做本地保存\n    localStorageKey: {\n        type: String\n    },\n    // 所有的自定义列key数据\n    groupColumnKeys: {\n        type: Array as PropType<GroupColumnData[]>\n    },\n    // 数据列表中的列\n    tableColumns: {\n        type: Array as PropType<Components.TableColumn<any>[]>,\n        required: true\n    },\n    // 至少选择列的数量\n    minSelecedNumber: {\n        type: Number,\n        default: 1\n    }\n},\n  emits: [\"close\", \"save\"],\n  setup(__props, { emit: __emit }) {\n\nconst props = __props;\n\nconst emits = __emit;\n\n// 自定义列数据\nconst customColumns = ref<CustomerColumnData[] | CustomerGroupColumnData[]>([]);\n\n// 搜索加载中\nconst searchLoading = ref(false);\n\n// 沒有数据\nconst noDataForSearch = ref(false);\n\n// 搜索的关键词\nconst keyword = ref(\"\");\n\n// 是否全选（未分组有效）\nconst checkAll = ref(false);\n\n// 全选不确定状态\nconst isIndeterminate = ref(false);\n\n// 当前折叠面板激活的选项\nconst activeNames = ref<string[]>([]);\n\n// 拉平后的数据列表\nconst flapCustomColumns = computed<CustomerColumnData[]>(() => {\n    if (props.groupColumnKeys) {\n        return customColumns.value.map(item => item.childList).flat();\n    }\n    return customColumns.value;\n});\n\n// 当前选中的数据列表\nconst selectedColumns = computed<CustomerColumnData[]>(() => {\n    return flapCustomColumns.value.filter(item => item.selected);\n});\n\n// 初始化\nconst init = function () {\n    // 获取上次保存的自定义列数据\n    const columnKeys = props.localStorageKey && getValue(props.localStorageKey);\n    if (props.groupColumnKeys) {\n        // 当前数据列表有分组\n        props.groupColumnKeys.forEach(({ name, key, childList }) => {\n            const columnItem: CustomerGroupColumnData = {\n                name,\n                key,\n                isShow: true,\n                selected: false,\n                indeterminate: false,\n                childList: childList.map(key => {\n                    const findTableColumn = props.tableColumns.find(tableColumn => tableColumn.prop === key);\n                    return {\n                        name: findTableColumn?.label || \"-\",\n                        key,\n                        disabled: props.fixedColumnKeys ? props.fixedColumnKeys.includes(key) : !!findTableColumn?.fixed || false,\n                        isShow: true,\n                        selected: !columnKeys || columnKeys.includes(key)\n                    };\n                })\n            };\n            const selectedNumber = columnItem.childList.filter(childItem => childItem.selected).length;\n            columnItem.selected = columnItem.childList.length === selectedNumber;\n            columnItem.indeterminate = selectedNumber > 0 && selectedNumber < columnItem.childList.length;\n            (customColumns.value as CustomerGroupColumnData[]).push(columnItem);\n            activeNames.value.push(key);\n        });\n    } else {\n        props.tableColumns.forEach(column => {\n            if (column.prop && (!column.type || ![\"index\", \"selection\", \"expand\", \"action\"].includes(column.type))) {\n                // 排除非正常的数据列且必须定义了prop属性的\n                (customColumns.value as CustomerColumnData[]).push({\n                    name: column.label || \"-\",\n                    key: column.prop,\n                    disabled: column.prop && props.fixedColumnKeys ? props.fixedColumnKeys.includes(column.prop) : !!column?.fixed || false,\n                    isShow: true,\n                    selected: !columnKeys || columnKeys.includes(column.prop)\n                });\n            }\n        });\n        const selectedNumber = customColumns.value.filter(item => item.selected).length;\n        checkAll.value = selectedNumber === customColumns.value.length;\n        isIndeterminate.value = selectedNumber > 0 && selectedNumber < customColumns.value.length;\n    }\n    if (columnKeys) {\n        // 初始化外部需要隐藏的数据列\n        emits(\"save\", columnKeys);\n    }\n};\n\n// 搜索（防抖）\nconst searchDebounce = debounce(function () {\n    if (props.groupColumnKeys) {\n        customColumns.value.forEach((item, index) => {\n            item.childList.forEach(childItem => {\n                childItem.isShow = childItem.name.includes(keyword.value);\n            });\n            item.isShow = item.childList.some(childItem => childItem.isShow);\n            checkChange(item.selected, false, index);\n        });\n    } else {\n        customColumns.value.forEach(item => {\n            item.isShow = item.name.includes(keyword.value);\n        });\n        checkChange(checkAll.value, false);\n    }\n    searchLoading.value = false;\n    noDataForSearch.value = customColumns.value.every(item => !item.isShow);\n}, 200);\n\n// 搜索操作\nconst searchHandle = function () {\n    searchLoading.value = true;\n    searchDebounce();\n};\n\nconst close = function () {\n    emits(\"close\");\n};\n\n/**\n * 复选框check变化\n * @param selected check的值\n * @param isCheckAll 是否全选\n * @param index 数据列分组的索引\n */\nconst checkChange = function (selected: boolean, isCheckAll: boolean, index?: number) {\n    if (isCheckAll && !props.groupColumnKeys) {\n        // 当前没有分组，全选check触发\n        customColumns.value.forEach(item => {\n            if (item.isShow && !item.disabled) {\n                item.selected = selected;\n            }\n        });\n        isIndeterminate.value = !selected && customColumns.value.some(item => item.selected);\n    } else if (isCheckAll && props.groupColumnKeys) {\n        // 当前有分组，全选check触发\n        (customColumns.value[index!] as CustomerGroupColumnData).childList.forEach(item => {\n            if (item.isShow && !item.disabled) {\n                item.selected = selected;\n            }\n        });\n        (customColumns.value[index!] as CustomerGroupColumnData).indeterminate = !selected && (customColumns.value[index!] as CustomerGroupColumnData).childList.some(item => item.selected);\n    } else if (props.groupColumnKeys) {\n        // 当前是分组，其childList中的数据选择有变化\n        const selectedNumber = (customColumns.value[index!] as CustomerGroupColumnData).childList.filter(childItem => childItem.selected && childItem.isShow).length;\n        const totalNumber = (customColumns.value[index!] as CustomerGroupColumnData).childList.filter(childItem => childItem.isShow).length;\n        (customColumns.value[index!] as CustomerGroupColumnData).selected = totalNumber > 0 && selectedNumber === totalNumber;\n        (customColumns.value[index!] as CustomerGroupColumnData).indeterminate = selectedNumber > 0 && selectedNumber < totalNumber;\n    } else {\n        // 当前未分组，其childList中的数据选择有变化\n        const selectedNumber = customColumns.value.filter(item => item.selected && item.isShow).length;\n        const totalNumber = customColumns.value.filter(item => item.isShow).length;\n        checkAll.value = totalNumber > 0 && selectedNumber === totalNumber;\n        isIndeterminate.value = selectedNumber > 0 && selectedNumber < totalNumber;\n    }\n};\n\n// 恢复初始\nconst restoreColumns = function () {\n    if (props.groupColumnKeys) {\n        customColumns.value.forEach(item => {\n            item.selected = true;\n            item.indeterminate = false;\n            item.childList.forEach(childItem => {\n                childItem.selected = true;\n            });\n        });\n    } else {\n        customColumns.value.forEach(item => {\n            item.selected = true;\n        });\n        checkAll.value = true;\n        isIndeterminate.value = false;\n    }\n};\n\n// 删除当前选中的数据\nconst deleteSelected = function (index) {\n    flapCustomColumns.value[index].selected = false;\n    if (props.groupColumnKeys) {\n        const key = flapCustomColumns.value[index].key;\n        const findIndex = customColumns.value.findIndex(item => item.childList.findIndex(childItem => childItem.key === key) !== -1);\n        checkChange(false, false, findIndex);\n    } else {\n        checkChange(false, false);\n    }\n};\n\n// 保存\nconst save = function () {\n    const columnKeys = flapCustomColumns.value.filter(item => item.selected).map(item => item.key);\n    if (props.localStorageKey) {\n        setValue(props.localStorageKey, columnKeys, 0);\n    }\n    emits(\"save\", columnKeys);\n    emits(\"close\");\n};\n\ninit();\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_input = _resolveComponent(\"el-input\")!\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\")!\n  const _component_el_col = _resolveComponent(\"el-col\")!\n  const _component_el_row = _resolveComponent(\"el-row\")!\n  const _component_el_collapse_item = _resolveComponent(\"el-collapse-item\")!\n  const _component_el_collapse = _resolveComponent(\"el-collapse\")!\n  const _component_el_icon = _resolveComponent(\"el-icon\")!\n  const _component_el_button = _resolveComponent(\"el-button\")!\n  const _component_el_dialog = _resolveComponent(\"el-dialog\")!\n\n  return (_openBlock(), _createBlock(_component_el_dialog, {\n    \"model-value\": __props.isShow,\n    title: \"自定义列\",\n    width: \"750px\",\n    appendToBody: \"\",\n    destroyOnClose: \"\",\n    onClosed: close,\n    \"close-on-click-modal\": false,\n    class: \"custom-column-dialog\"\n  }, {\n    footer: _withCtx(() => [\n      _createVNode(_component_el_button, { onClick: close }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"取消\")\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_el_button, {\n        disabled: selectedColumns.value.length <= __props.minSelecedNumber!,\n        type: \"primary\",\n        onClick: save\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"应用\")\n        ]),\n        _: 1\n      }, 8, [\"disabled\"])\n    ]),\n    default: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createVNode(_component_el_input, {\n          modelValue: keyword.value,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((keyword).value = $event)),\n          modelModifiers: { trim: true },\n          style: {\"width\":\"360px\"},\n          clearable: \"\",\n          placeholder: \"搜索列名\",\n          \"prefix-icon\": _unref(Search),\n          onInput: searchHandle\n        }, null, 8, [\"modelValue\", \"prefix-icon\"])\n      ]),\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createElementVNode(\"div\", _hoisted_3, [\n          (searchLoading.value)\n            ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, \"数据匹配中...\"))\n            : (noDataForSearch.value)\n              ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"未匹配到数据\"))\n              : (__props.groupColumnKeys)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [\n                    _createVNode(_component_el_collapse, {\n                      modelValue: activeNames.value,\n                      \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((activeNames).value = $event))\n                    }, {\n                      default: _withCtx(() => [\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(customColumns.value as CustomerGroupColumnData[], (item, index) => {\n                          return _withDirectives((_openBlock(), _createBlock(_component_el_collapse_item, {\n                            key: item.key,\n                            name: item.key\n                          }, {\n                            title: _withCtx(() => [\n                              _createVNode(_component_el_checkbox, {\n                                onClick: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"stop\"])),\n                                modelValue: item.selected,\n                                \"onUpdate:modelValue\": ($event: any) => ((item.selected) = $event),\n                                indeterminate: item.indeterminate,\n                                label: item.key,\n                                onChange: ($event: any) => (checkChange(item.selected, true, index))\n                              }, {\n                                default: _withCtx(() => [\n                                  _createTextVNode(_toDisplayString(item.name), 1)\n                                ]),\n                                _: 2\n                              }, 1032, [\"modelValue\", \"onUpdate:modelValue\", \"indeterminate\", \"label\", \"onChange\"])\n                            ]),\n                            default: _withCtx(() => [\n                              _createVNode(_component_el_row, null, {\n                                default: _withCtx(() => [\n                                  (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(item.childList, (childItem) => {\n                                    return _withDirectives((_openBlock(), _createBlock(_component_el_col, {\n                                      span: 12,\n                                      key: childItem.key\n                                    }, {\n                                      default: _withCtx(() => [\n                                        _createVNode(_component_el_checkbox, {\n                                          modelValue: childItem.selected,\n                                          \"onUpdate:modelValue\": ($event: any) => ((childItem.selected) = $event),\n                                          label: childItem.key,\n                                          disabled: childItem.disabled,\n                                          onChange: ($event: any) => (checkChange(item.selected, false, index))\n                                        }, {\n                                          default: _withCtx(() => [\n                                            _createElementVNode(\"span\", {\n                                              class: \"checkbox-label-text\",\n                                              title: childItem.name\n                                            }, _toDisplayString(childItem.name), 9, _hoisted_7)\n                                          ]),\n                                          _: 2\n                                        }, 1032, [\"modelValue\", \"onUpdate:modelValue\", \"label\", \"disabled\", \"onChange\"])\n                                      ]),\n                                      _: 2\n                                    }, 1024)), [\n                                      [_vShow, childItem.isShow]\n                                    ])\n                                  }), 128))\n                                ]),\n                                _: 2\n                              }, 1024)\n                            ]),\n                            _: 2\n                          }, 1032, [\"name\"])), [\n                            [_vShow, item.isShow]\n                          ])\n                        }), 128))\n                      ]),\n                      _: 1\n                    }, 8, [\"modelValue\"])\n                  ]))\n                : (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [\n                    _createVNode(_component_el_row, null, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_col, { span: 24 }, {\n                          default: _withCtx(() => [\n                            _createVNode(_component_el_checkbox, {\n                              modelValue: checkAll.value,\n                              \"onUpdate:modelValue\": _cache[3] || (_cache[3] = ($event: any) => ((checkAll).value = $event)),\n                              indeterminate: isIndeterminate.value,\n                              label: \"全选\",\n                              onChange: _cache[4] || (_cache[4] = ($event: any) => (checkChange(checkAll.value, true)))\n                            }, null, 8, [\"modelValue\", \"indeterminate\"])\n                          ]),\n                          _: 1\n                        }),\n                        (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(customColumns.value as CustomerColumnData[], (item) => {\n                          return _withDirectives((_openBlock(), _createBlock(_component_el_col, {\n                            key: item.key,\n                            span: 12\n                          }, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_el_checkbox, {\n                                modelValue: item.selected,\n                                \"onUpdate:modelValue\": ($event: any) => ((item.selected) = $event),\n                                disabled: item.disabled,\n                                onChange: ($event: any) => (checkChange(item.selected, false))\n                              }, {\n                                default: _withCtx(() => [\n                                  _createElementVNode(\"span\", {\n                                    class: \"checkbox-label-text\",\n                                    title: item.name\n                                  }, _toDisplayString(item.name), 9, _hoisted_9)\n                                ]),\n                                _: 2\n                              }, 1032, [\"modelValue\", \"onUpdate:modelValue\", \"disabled\", \"onChange\"])\n                            ]),\n                            _: 2\n                          }, 1024)), [\n                            [_vShow, item.isShow]\n                          ])\n                        }), 128))\n                      ]),\n                      _: 1\n                    })\n                  ]))\n        ]),\n        _createElementVNode(\"div\", _hoisted_10, [\n          _createElementVNode(\"div\", _hoisted_11, [\n            _createElementVNode(\"div\", _hoisted_12, \"已选指标(\" + _toDisplayString(selectedColumns.value.length) + \")\", 1),\n            _createElementVNode(\"div\", {\n              class: \"label-text active\",\n              onClick: restoreColumns\n            }, \"恢复初始\")\n          ]),\n          _createElementVNode(\"div\", _hoisted_13, [\n            (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(flapCustomColumns.value, (item, index) => {\n              return _withDirectives((_openBlock(), _createElementBlock(\"div\", {\n                class: \"row-info\",\n                key: item.key\n              }, [\n                _createElementVNode(\"div\", {\n                  class: \"name-text\",\n                  title: item.name\n                }, _toDisplayString(item.name), 9, _hoisted_14),\n                (!item.disabled)\n                  ? (_openBlock(), _createBlock(_component_el_icon, {\n                      key: 0,\n                      onClick: ($event: any) => (deleteSelected(index))\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_unref(Delete))\n                      ]),\n                      _: 2\n                    }, 1032, [\"onClick\"]))\n                  : _createCommentVNode(\"\", true)\n              ])), [\n                [_vShow, item.selected]\n              ])\n            }), 128))\n          ])\n        ])\n      ]),\n      _createElementVNode(\"div\", _hoisted_15, [\n        (selectedColumns.value.length <= __props.minSelecedNumber!)\n          ? (_openBlock(), _createElementBlock(_Fragment, { key: 0 }, [\n              _createTextVNode(\"至少选中\" + _toDisplayString(__props.minSelecedNumber) + \"列数据\", 1)\n            ], 64))\n          : _createCommentVNode(\"\", true)\n      ])\n    ]),\n    _: 1\n  }, 8, [\"model-value\"]))\n}\n}\n\n})","<!--\n * @创建者: yujinjin9@126.com\n * @创建时间: 2024-01-17 18:05:57\n * @最后修改作者: yujinjin9@126.com\n * @最后修改时间: 2024-03-04 18:36:03\n * @项目的路径: \\vue-manager-system\\src\\views\\components\\customer-column-dialog.vue\n * @描述: 自定义数据列弹窗\n-->\n<template>\n    <el-dialog :model-value=\"isShow\" title=\"自定义列\" width=\"750px\" appendToBody destroyOnClose @closed=\"close\" :close-on-click-modal=\"false\" class=\"custom-column-dialog\">\n        <div class=\"search-panel\">\n            <el-input v-model.trim=\"keyword\" style=\"width: 360px\" clearable placeholder=\"搜索列名\" :prefix-icon=\"Search\" @input=\"searchHandle\" />\n        </div>\n        <div class=\"column-list-panel\">\n            <div class=\"left-contents\">\n                <div v-if=\"searchLoading\" class=\"loading-text\">数据匹配中...</div>\n                <div v-else-if=\"noDataForSearch\" class=\"empty-text\">未匹配到数据</div>\n                <div v-else-if=\"groupColumnKeys\" class=\"checkbox-list-wrapper\">\n                    <el-collapse v-model=\"activeNames\">\n                        <el-collapse-item v-for=\"(item, index) in customColumns as CustomerGroupColumnData[]\" :key=\"item.key\" :name=\"item.key\" v-show=\"item.isShow\">\n                            <template #title>\n                                <el-checkbox @click.stop v-model=\"item.selected\" :indeterminate=\"item.indeterminate\" :label=\"item.key\" @change=\"checkChange(item.selected, true, index)\">\n                                    {{ item.name }}\n                                </el-checkbox>\n                            </template>\n                            <el-row>\n                                <el-col :span=\"12\" v-for=\"childItem in item.childList\" :key=\"childItem.key\" v-show=\"childItem.isShow\">\n                                    <el-checkbox v-model=\"childItem.selected\" :label=\"childItem.key\" :disabled=\"childItem.disabled\" @change=\"checkChange(item.selected, false, index)\">\n                                        <span class=\"checkbox-label-text\" :title=\"childItem.name\">{{ childItem.name }}</span>\n                                    </el-checkbox>\n                                </el-col>\n                            </el-row>\n                        </el-collapse-item>\n                    </el-collapse>\n                </div>\n                <div v-else class=\"checkbox-list-wrapper\">\n                    <el-row>\n                        <el-col :span=\"24\">\n                            <el-checkbox v-model=\"checkAll\" :indeterminate=\"isIndeterminate\" label=\"全选\" @change=\"checkChange(checkAll, true)\" />\n                        </el-col>\n                        <el-col v-for=\"item in customColumns as CustomerColumnData[]\" :key=\"item.key\" v-show=\"item.isShow\" :span=\"12\">\n                            <el-checkbox v-model=\"item.selected\" :disabled=\"item.disabled\" @change=\"checkChange(item.selected, false)\">\n                                <span class=\"checkbox-label-text\" :title=\"item.name\">{{ item.name }}</span>\n                            </el-checkbox>\n                        </el-col>\n                    </el-row>\n                </div>\n            </div>\n            <div class=\"right-contents\">\n                <div class=\"header-row\">\n                    <div class=\"label-text\">已选指标({{ selectedColumns.length }})</div>\n                    <div class=\"label-text active\" @click=\"restoreColumns\">恢复初始</div>\n                </div>\n                <div class=\"inner-row\">\n                    <div class=\"row-info\" v-for=\"(item, index) in flapCustomColumns\" v-show=\"item.selected\" :key=\"item.key\">\n                        <div class=\"name-text\" :title=\"item.name\">\n                            {{ item.name }}\n                        </div>\n                        <el-icon v-if=\"!item.disabled\" @click=\"deleteSelected(index)\">\n                            <Delete />\n                        </el-icon>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"error-tips\">\n            <template v-if=\"selectedColumns.length <= minSelecedNumber!\">至少选中{{ minSelecedNumber }}列数据</template>\n        </div>\n        <template #footer>\n            <el-button @click=\"close\">取消</el-button>\n            <el-button :disabled=\"selectedColumns.length <= minSelecedNumber!\" type=\"primary\" @click=\"save\">应用</el-button>\n        </template>\n    </el-dialog>\n</template>\n<script lang=\"ts\" setup>\nimport type { PropType } from \"vue\";\nimport type { Components } from \"/#/components\";\nimport { computed, ref } from \"vue\";\nimport { Search, Delete } from \"@element-plus/icons-vue\";\nimport { debounce } from \"@yujinjin/utils\";\nimport { getValue, setValue } from \"@/services/local-storage\";\n\n/** 分组的单个数据列(父组件传过来的数值) */\ninterface GroupColumnData {\n    // 组key值\n    key: string;\n\n    // 组中文名称\n    name: string;\n\n    // 分组数据列的key值集合\n    childList: Array<string>;\n}\n\n/** 自定义弹窗中定义的数据列（不分组） */\ninterface CustomerColumnData {\n    // 数据列key值\n    key: string;\n\n    // 数据列中文名称\n    name: string;\n\n    // 数据列是否显示\n    isShow: boolean;\n\n    // 数据列是否禁用选择\n    disabled: boolean;\n\n    // 数据列是否被选中\n    selected: boolean;\n}\n\n/** 自定义弹窗中定义的分组数据列（有分组） */\ninterface CustomerGroupColumnData {\n    // 数据列key值\n    key: string;\n\n    // 数据列中文名称\n    name: string;\n\n    // 数据列是否显示\n    isShow: boolean;\n\n    // 数据列是否被选中\n    selected: boolean;\n\n    // 复选框的不确定状态\n    indeterminate: boolean;\n\n    // 分组数据列的key值集合\n    childList: Array<CustomerColumnData>;\n}\n\nconst props = defineProps({\n    // 是否显示弹窗\n    isShow: {\n        type: Boolean\n    },\n    // 固定展示自定义列的key，如果不传值取tableColumns中的fixed属性值来判断，如果传空数组表示没有固定展示的自定义列\n    fixedColumnKeys: {\n        type: Array as PropType<string[]>\n    },\n    // 本地存储列表名称的key值, 如果值为空就不做本地保存\n    localStorageKey: {\n        type: String\n    },\n    // 所有的自定义列key数据\n    groupColumnKeys: {\n        type: Array as PropType<GroupColumnData[]>\n    },\n    // 数据列表中的列\n    tableColumns: {\n        type: Array as PropType<Components.TableColumn<any>[]>,\n        required: true\n    },\n    // 至少选择列的数量\n    minSelecedNumber: {\n        type: Number,\n        default: 1\n    }\n});\n\nconst emits = defineEmits([\"close\", \"save\"]);\n\n// 自定义列数据\nconst customColumns = ref<CustomerColumnData[] | CustomerGroupColumnData[]>([]);\n\n// 搜索加载中\nconst searchLoading = ref(false);\n\n// 沒有数据\nconst noDataForSearch = ref(false);\n\n// 搜索的关键词\nconst keyword = ref(\"\");\n\n// 是否全选（未分组有效）\nconst checkAll = ref(false);\n\n// 全选不确定状态\nconst isIndeterminate = ref(false);\n\n// 当前折叠面板激活的选项\nconst activeNames = ref<string[]>([]);\n\n// 拉平后的数据列表\nconst flapCustomColumns = computed<CustomerColumnData[]>(() => {\n    if (props.groupColumnKeys) {\n        return customColumns.value.map(item => item.childList).flat();\n    }\n    return customColumns.value;\n});\n\n// 当前选中的数据列表\nconst selectedColumns = computed<CustomerColumnData[]>(() => {\n    return flapCustomColumns.value.filter(item => item.selected);\n});\n\n// 初始化\nconst init = function () {\n    // 获取上次保存的自定义列数据\n    const columnKeys = props.localStorageKey && getValue(props.localStorageKey);\n    if (props.groupColumnKeys) {\n        // 当前数据列表有分组\n        props.groupColumnKeys.forEach(({ name, key, childList }) => {\n            const columnItem: CustomerGroupColumnData = {\n                name,\n                key,\n                isShow: true,\n                selected: false,\n                indeterminate: false,\n                childList: childList.map(key => {\n                    const findTableColumn = props.tableColumns.find(tableColumn => tableColumn.prop === key);\n                    return {\n                        name: findTableColumn?.label || \"-\",\n                        key,\n                        disabled: props.fixedColumnKeys ? props.fixedColumnKeys.includes(key) : !!findTableColumn?.fixed || false,\n                        isShow: true,\n                        selected: !columnKeys || columnKeys.includes(key)\n                    };\n                })\n            };\n            const selectedNumber = columnItem.childList.filter(childItem => childItem.selected).length;\n            columnItem.selected = columnItem.childList.length === selectedNumber;\n            columnItem.indeterminate = selectedNumber > 0 && selectedNumber < columnItem.childList.length;\n            (customColumns.value as CustomerGroupColumnData[]).push(columnItem);\n            activeNames.value.push(key);\n        });\n    } else {\n        props.tableColumns.forEach(column => {\n            if (column.prop && (!column.type || ![\"index\", \"selection\", \"expand\", \"action\"].includes(column.type))) {\n                // 排除非正常的数据列且必须定义了prop属性的\n                (customColumns.value as CustomerColumnData[]).push({\n                    name: column.label || \"-\",\n                    key: column.prop,\n                    disabled: column.prop && props.fixedColumnKeys ? props.fixedColumnKeys.includes(column.prop) : !!column?.fixed || false,\n                    isShow: true,\n                    selected: !columnKeys || columnKeys.includes(column.prop)\n                });\n            }\n        });\n        const selectedNumber = customColumns.value.filter(item => item.selected).length;\n        checkAll.value = selectedNumber === customColumns.value.length;\n        isIndeterminate.value = selectedNumber > 0 && selectedNumber < customColumns.value.length;\n    }\n    if (columnKeys) {\n        // 初始化外部需要隐藏的数据列\n        emits(\"save\", columnKeys);\n    }\n};\n\n// 搜索（防抖）\nconst searchDebounce = debounce(function () {\n    if (props.groupColumnKeys) {\n        customColumns.value.forEach((item, index) => {\n            item.childList.forEach(childItem => {\n                childItem.isShow = childItem.name.includes(keyword.value);\n            });\n            item.isShow = item.childList.some(childItem => childItem.isShow);\n            checkChange(item.selected, false, index);\n        });\n    } else {\n        customColumns.value.forEach(item => {\n            item.isShow = item.name.includes(keyword.value);\n        });\n        checkChange(checkAll.value, false);\n    }\n    searchLoading.value = false;\n    noDataForSearch.value = customColumns.value.every(item => !item.isShow);\n}, 200);\n\n// 搜索操作\nconst searchHandle = function () {\n    searchLoading.value = true;\n    searchDebounce();\n};\n\nconst close = function () {\n    emits(\"close\");\n};\n\n/**\n * 复选框check变化\n * @param selected check的值\n * @param isCheckAll 是否全选\n * @param index 数据列分组的索引\n */\nconst checkChange = function (selected: boolean, isCheckAll: boolean, index?: number) {\n    if (isCheckAll && !props.groupColumnKeys) {\n        // 当前没有分组，全选check触发\n        customColumns.value.forEach(item => {\n            if (item.isShow && !item.disabled) {\n                item.selected = selected;\n            }\n        });\n        isIndeterminate.value = !selected && customColumns.value.some(item => item.selected);\n    } else if (isCheckAll && props.groupColumnKeys) {\n        // 当前有分组，全选check触发\n        (customColumns.value[index!] as CustomerGroupColumnData).childList.forEach(item => {\n            if (item.isShow && !item.disabled) {\n                item.selected = selected;\n            }\n        });\n        (customColumns.value[index!] as CustomerGroupColumnData).indeterminate = !selected && (customColumns.value[index!] as CustomerGroupColumnData).childList.some(item => item.selected);\n    } else if (props.groupColumnKeys) {\n        // 当前是分组，其childList中的数据选择有变化\n        const selectedNumber = (customColumns.value[index!] as CustomerGroupColumnData).childList.filter(childItem => childItem.selected && childItem.isShow).length;\n        const totalNumber = (customColumns.value[index!] as CustomerGroupColumnData).childList.filter(childItem => childItem.isShow).length;\n        (customColumns.value[index!] as CustomerGroupColumnData).selected = totalNumber > 0 && selectedNumber === totalNumber;\n        (customColumns.value[index!] as CustomerGroupColumnData).indeterminate = selectedNumber > 0 && selectedNumber < totalNumber;\n    } else {\n        // 当前未分组，其childList中的数据选择有变化\n        const selectedNumber = customColumns.value.filter(item => item.selected && item.isShow).length;\n        const totalNumber = customColumns.value.filter(item => item.isShow).length;\n        checkAll.value = totalNumber > 0 && selectedNumber === totalNumber;\n        isIndeterminate.value = selectedNumber > 0 && selectedNumber < totalNumber;\n    }\n};\n\n// 恢复初始\nconst restoreColumns = function () {\n    if (props.groupColumnKeys) {\n        customColumns.value.forEach(item => {\n            item.selected = true;\n            item.indeterminate = false;\n            item.childList.forEach(childItem => {\n                childItem.selected = true;\n            });\n        });\n    } else {\n        customColumns.value.forEach(item => {\n            item.selected = true;\n        });\n        checkAll.value = true;\n        isIndeterminate.value = false;\n    }\n};\n\n// 删除当前选中的数据\nconst deleteSelected = function (index) {\n    flapCustomColumns.value[index].selected = false;\n    if (props.groupColumnKeys) {\n        const key = flapCustomColumns.value[index].key;\n        const findIndex = customColumns.value.findIndex(item => item.childList.findIndex(childItem => childItem.key === key) !== -1);\n        checkChange(false, false, findIndex);\n    } else {\n        checkChange(false, false);\n    }\n};\n\n// 保存\nconst save = function () {\n    const columnKeys = flapCustomColumns.value.filter(item => item.selected).map(item => item.key);\n    if (props.localStorageKey) {\n        setValue(props.localStorageKey, columnKeys, 0);\n    }\n    emits(\"save\", columnKeys);\n    emits(\"close\");\n};\n\ninit();\n</script>\n<style lang=\"scss\">\n.custom-column-dialog {\n    --el-checkbox-height: 32px;\n\n    .el-dialog__header {\n        border-bottom: 1px solid #eeeeee;\n        padding: 0px 12px 12px;\n        margin-right: 0px;\n\n        .el-dialog__title {\n            font-size: 16px;\n            font-weight: 500;\n            color: #262626;\n            line-height: 24px;\n            display: inline-block;\n        }\n\n        .el-dialog__headerbtn {\n            top: 1px;\n            right: 5px;\n        }\n    }\n\n    .el-dialog__footer {\n        border-top: 1px solid #eeeeee;\n        padding: 12px 24px;\n\n        .el-button {\n            width: 80px;\n        }\n    }\n\n    .el-dialog__body {\n        padding: 12px 20px 4px;\n    }\n\n    .el-collapse-item__header .el-checkbox__label {\n        font-weight: bold;\n    }\n\n    .search-panel {\n        padding-bottom: 8px;\n    }\n\n    .column-list-panel {\n        display: flex;\n        color: rgba(0, 0, 0, 0.65);\n\n        .left-contents {\n            width: 75%;\n            padding-left: 16px;\n            border: 1px solid #d9d9d9;\n            border-radius: 2px;\n            flex: 1;\n\n            .loading-text,\n            .empty-text {\n                padding: 20px;\n                text-align: center;\n                color: rgba(0, 0, 0, 0.45);\n            }\n\n            .checkbox-list-wrapper {\n                max-height: 284px;\n                overflow-y: auto;\n\n                .el-checkbox__label {\n                    display: inline-flex;\n                }\n\n                .checkbox-label-text {\n                    display: inline-block;\n                    white-space: nowrap;\n                    word-wrap: normal;\n                    width: 215px;\n                    overflow: hidden;\n                    text-overflow: ellipsis;\n                    line-height: 30px;\n                }\n            }\n        }\n\n        .right-contents {\n            width: 25%;\n            margin-left: 10px;\n            border: 1px solid #d9d9d9;\n\n            .header-row {\n                display: flex;\n                justify-content: space-between;\n                justify-content: space-between;\n                line-height: 37px;\n                font-size: 12px;\n                font-weight: 400;\n                border-bottom: 1px solid #d9d9d9;\n                padding: 0px 12px;\n\n                .label-text.active {\n                    cursor: pointer;\n                    color: #00a64d;\n                }\n            }\n\n            .inner-row {\n                overflow-y: auto;\n                max-height: 240px;\n                padding: 0px 12px;\n\n                .row-info {\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                    line-height: 32px;\n                    height: 32px;\n                    font-size: 12px;\n                    padding: 0px 5px;\n\n                    &:hover {\n                        background-color: #fafafa;\n                    }\n\n                    .name-text {\n                        font-weight: 400;\n                        white-space: nowrap;\n                        text-overflow: ellipsis;\n                        overflow: hidden;\n                    }\n\n                    .el-icon {\n                        cursor: pointer;\n                    }\n                }\n            }\n        }\n    }\n\n    .error-tips {\n        padding-top: 4px;\n        color: red;\n        font-size: 12px;\n        height: 20px;\n    }\n}\n</style>\n","import script from \"./customer-column-dialog.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./customer-column-dialog.vue?vue&type=script&lang=ts&setup=true\"\n\nimport \"./customer-column-dialog.vue?vue&type=style&index=0&id=6c45ce20&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, unref as _unref, createVNode as _createVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-3b824a78\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"table-column-copy\" }\nconst _hoisted_2 = { class: \"text\" }\n\nimport { ref } from \"vue\";\nimport { DocumentCopy } from \"@element-plus/icons-vue\";\nimport Clipboard from \"clipboard\";\nimport { ElMessage } from \"element-plus\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'table-column-copy',\n  props: {\n    value: {\n        type: String\n    },\n    copyTips: {\n        type: String,\n        default: \"复制\"\n    }\n},\n  setup(__props) {\n\nconst props = __props;\n\nconst elIconRef = ref<HTMLDivElement>();\n\n// 复制操作\nconst copyTextHandle = function () {\n    const clipboard = new Clipboard(elIconRef.value!, {\n        text: function () {\n            return props.value!;\n        }\n    });\n    clipboard.on(\"success\", () => {\n        ElMessage({\n            message: \"复制成功\",\n            type: \"success\",\n            duration: 1000\n        })\n        clipboard.destroy();\n    });\n    clipboard.on(\"error\", () => {\n        ElMessage.error(\"复制失败\");\n        clipboard.destroy();\n    });\n}\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_icon = _resolveComponent(\"el-icon\")!\n  const _component_el_tooltip = _resolveComponent(\"el-tooltip\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"span\", _hoisted_2, _toDisplayString(__props.value || \"-\"), 1),\n    (__props.value)\n      ? (_openBlock(), _createBlock(_component_el_tooltip, {\n          key: 0,\n          effect: \"dark\",\n          content: __props.copyTips\n        }, {\n          default: _withCtx(() => [\n            _createElementVNode(\"div\", {\n              class: \"icon-box\",\n              ref_key: \"elIconRef\",\n              ref: elIconRef\n            }, [\n              _createVNode(_component_el_icon, { onClick: copyTextHandle }, {\n                default: _withCtx(() => [\n                  _createVNode(_unref(DocumentCopy))\n                ]),\n                _: 1\n              })\n            ], 512)\n          ]),\n          _: 1\n        }, 8, [\"content\"]))\n      : _createCommentVNode(\"\", true)\n  ]))\n}\n}\n\n})","<template>\n    <div class=\"table-column-copy\">\n        <span class=\"text\">{{ value || \"-\" }}</span>\n        <el-tooltip v-if=\"value\" effect=\"dark\" :content=\"copyTips\">\n            <div class=\"icon-box\" ref=\"elIconRef\">\n                <el-icon @click=\"copyTextHandle\">\n                    <DocumentCopy />\n                </el-icon>\n            </div>\n        </el-tooltip>\n    </div>\n</template>\n<script setup lang=\"ts\">\nimport { ref } from \"vue\";\nimport { DocumentCopy } from \"@element-plus/icons-vue\";\nimport Clipboard from \"clipboard\";\nimport { ElMessage } from \"element-plus\";\n\nconst props = defineProps({\n    value: {\n        type: String\n    },\n    copyTips: {\n        type: String,\n        default: \"复制\"\n    }\n});\n\nconst elIconRef = ref<HTMLDivElement>();\n\n// 复制操作\nconst copyTextHandle = function () {\n    const clipboard = new Clipboard(elIconRef.value!, {\n        text: function () {\n            return props.value!;\n        }\n    });\n    clipboard.on(\"success\", () => {\n        ElMessage({\n            message: \"复制成功\",\n            type: \"success\",\n            duration: 1000\n        })\n        clipboard.destroy();\n    });\n    clipboard.on(\"error\", () => {\n        ElMessage.error(\"复制失败\");\n        clipboard.destroy();\n    });\n}\n</script>\n<style lang=\"scss\" scoped>\n.table-column-copy {\n    width: 100%;\n    display: flex;\n    align-items: center;\n\n    .text {\n        flex: 1;\n        display: -webkit-box;\n        word-break: break-all;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        -webkit-box-orient: vertical;\n        -webkit-line-clamp: 1;\n    }\n\n    .icon-box {\n        padding: 2px;\n        cursor: pointer;\n        text-align: center;\n        font-size: 16px;\n\n        &:hover {\n            color: #15c359;\n        }\n    }\n}\n</style>","import script from \"./table-column-copy.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./table-column-copy.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./table-column-copy.vue?vue&type=style&index=0&id=3b824a78&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3b824a78\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-6f555546\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"title-bar\" }, \"订单信息\", -1))\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"title-bar\" }, \"支付信息\", -1))\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"title-bar\" }, \"商品列表\", -1))\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"title-bar\" }, \"使用优惠券列表\", -1))\nconst _hoisted_5 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"title-bar\" }, \"物流信息\", -1))\nconst _hoisted_6 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"title-bar\" }, \"售后信息\", -1))\nconst _hoisted_7 = { class: \"dialog-footer\" }\n\nimport { ref } from \"vue\";\nimport { dateFormat, numberFormat } from \"@yujinjin/utils\";\nimport demoAPI from \"@api/demo\";\nimport { DEVICE_SOURCE_ENUM, ORDER_STATUS_ENUM, PAY_WAY_ENUM } from \"../constants\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'view-order-details-dialog',\n  props: {\n    row: {\n        type: Object\n    }\n},\n  emits: [\"close\"],\n  setup(__props, { emit: __emit }) {\n\nconst props = __props;\n\nconst emits = __emit;\n\n// 当前激活的折叠面板列表\nconst activeCollapseNames = ref([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"]);\n\n// 弹窗关闭事件\nconst dialogClosed = function () {\n    emits(\"close\", false);\n};\n\n// 弹窗显示状态\nconst dialogVisible = ref(false);\n\n// 订单详情信息\nconst orderDetails = ref<Record<string, any>>({});\n\n// 订单商品列表\nconst goodsDataTableFields = [\n    {\n        label: \"商品名称\",\n        prop: \"name\",\n        width: 100,\n        fixed: true\n    },\n    {\n        label: \"参加活动\",\n        prop: \"activity\",\n        width: 100\n    },\n    {\n        label: \"商品图片\",\n        prop: \"img\",\n        type: \"image\",\n        width: 100\n    },\n    {\n        label: \"商品CODE\",\n        prop: \"code\",\n        width: 100\n    },\n    {\n        label: \"商品规格\",\n        prop: \"specs\",\n        minWidth: 100\n    },\n    {\n        label: \"商品数量\",\n        prop: \"quantity\",\n        type: \"number\",\n        width: 100\n    },\n    {\n        label: \"商品金额(元)\",\n        prop: \"price\",\n        type: \"number\",\n        digit: 2,\n        width: 100\n    },\n    {\n        label: \"优惠金额(元)\",\n        prop: \"discountPriceInYuan\",\n        type: \"number\",\n        digit: 2,\n        width: 100\n    },\n    {\n        label: \"小计(元)\",\n        prop: \"totalAmount\",\n        type: \"number\",\n        digit: 2,\n        formatter: function (row) {\n            return row.price * row.quantity;\n        },\n        width: 100\n    }\n];\n\n// 使用优惠券列表\nconst couponDataTableFields = [\n    {\n        label: \"优惠类型\",\n        prop: \"type\",\n        width: 120\n    },\n    {\n        label: \"券名称\",\n        prop: \"name\",\n        minWidth: 120\n    },\n    {\n        label: \"券面优惠金额\",\n        prop: \"amount\",\n        type: \"number\",\n        digit: 2,\n        width: 100\n    },\n    {\n        label: \"券数量\",\n        prop: \"quantity\",\n        type: \"number\",\n        width: 100\n    }\n];\n\n// 获取枚举值\nconst getEnumText = function (value: string | number, datas: Array<Record<string, string | number>>) {\n    return datas.find(item => item.value === value)?.label || \"-\";\n};\n\n// 初始化\nconst init = async function () {\n    try {\n        orderDetails.value = (await demoAPI.queryOrderDetails(props.row!.orderNo, { isShowLoading: true })) as Record<string, any>;\n        dialogVisible.value = true;\n    } catch (error) {\n        dialogClosed();\n    }\n};\n\ninit();\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_tag = _resolveComponent(\"el-tag\")!\n  const _component_el_descriptions_item = _resolveComponent(\"el-descriptions-item\")!\n  const _component_el_descriptions = _resolveComponent(\"el-descriptions\")!\n  const _component_el_collapse_item = _resolveComponent(\"el-collapse-item\")!\n  const _component_data_table = _resolveComponent(\"data-table\")!\n  const _component_el_collapse = _resolveComponent(\"el-collapse\")!\n  const _component_el_button = _resolveComponent(\"el-button\")!\n  const _component_el_dialog = _resolveComponent(\"el-dialog\")!\n\n  return (_openBlock(), _createBlock(_component_el_dialog, {\n    modelValue: dialogVisible.value,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((dialogVisible).value = $event)),\n    title: \"查看订单详细信息\",\n    class: \"common-dialog\",\n    width: \"800px\",\n    onClosed: dialogClosed\n  }, {\n    footer: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_7, [\n        _createVNode(_component_el_button, {\n          onClick: _cache[1] || (_cache[1] = ($event: any) => (dialogVisible.value = false))\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(\"关闭弹窗\")\n          ]),\n          _: 1\n        })\n      ])\n    ]),\n    default: _withCtx(() => [\n      _createVNode(_component_el_collapse, {\n        modelValue: activeCollapseNames.value,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((activeCollapseNames).value = $event))\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_el_collapse_item, { name: \"1\" }, {\n            title: _withCtx(() => [\n              _hoisted_1\n            ]),\n            default: _withCtx(() => [\n              _createVNode(_component_el_descriptions, {\n                direction: \"vertical\",\n                column: 3,\n                border: \"\"\n              }, {\n                default: _withCtx(() => [\n                  _createVNode(_component_el_descriptions_item, { label: \"订单编号\" }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_el_tag, null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(orderDetails.value.orderNo), 1)\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_el_descriptions_item, { label: \"订单状态\" }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_el_tag, null, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(getEnumText(orderDetails.value.orderStatus, _unref(ORDER_STATUS_ENUM))), 1)\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_el_descriptions_item, { label: \"订单金额(元)\" }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(_unref(numberFormat)(orderDetails.value.orderAmount, 2)), 1)\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_el_descriptions_item, { label: \"订单来源\" }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(getEnumText(orderDetails.value.deviceSource, _unref(DEVICE_SOURCE_ENUM))), 1)\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_el_descriptions_item, { label: \"下单时间\" }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(_unref(dateFormat)(orderDetails.value.createTime, \"YYYY-MM-DD HH:mm:ss\")), 1)\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_el_descriptions_item, { label: \"下单用户ID\" }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(orderDetails.value.buyerId), 1)\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_el_descriptions_item, { label: \"下单用户名称\" }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(orderDetails.value.buyerName), 1)\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_el_descriptions_item, { label: \"下单用户手机号\" }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(orderDetails.value.buyerMobileNumber), 1)\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_el_descriptions_item, { label: \"收货人姓名\" }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(orderDetails.value.receiver), 1)\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_el_descriptions_item, { label: \"收货人手机号\" }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(orderDetails.value.receiverMobileNumber), 1)\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_el_descriptions_item, {\n                    label: \"收货地址\",\n                    span: 3\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(orderDetails.value.receiverAddress), 1)\n                    ]),\n                    _: 1\n                  }),\n                  _createVNode(_component_el_descriptions_item, {\n                    label: \"用户备注\",\n                    span: 3\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(_toDisplayString(orderDetails.value.remark || \"-\"), 1)\n                    ]),\n                    _: 1\n                  })\n                ]),\n                _: 1\n              })\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_collapse_item, { name: \"2\" }, {\n            title: _withCtx(() => [\n              _hoisted_2\n            ]),\n            default: _withCtx(() => [\n              (orderDetails.value.payInfo)\n                ? (_openBlock(), _createBlock(_component_el_descriptions, {\n                    key: 0,\n                    direction: \"vertical\",\n                    column: 2,\n                    border: \"\"\n                  }, {\n                    default: _withCtx(() => [\n                      _createVNode(_component_el_descriptions_item, { label: \"支付流水号\" }, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_el_tag, null, {\n                            default: _withCtx(() => [\n                              _createTextVNode(_toDisplayString(orderDetails.value.payInfo.payNo), 1)\n                            ]),\n                            _: 1\n                          })\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_el_descriptions_item, { label: \"支付金额(元)\" }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(_unref(numberFormat)(orderDetails.value.payInfo.payAmount, 2)), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_el_descriptions_item, { label: \"支付时间\" }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(_unref(dateFormat)(orderDetails.value.payInfo.payTime, \"YYYY-MM-DD HH:mm:ss\")), 1)\n                        ]),\n                        _: 1\n                      }),\n                      _createVNode(_component_el_descriptions_item, { label: \"支付方式\" }, {\n                        default: _withCtx(() => [\n                          _createTextVNode(_toDisplayString(getEnumText(orderDetails.value.payInfo.payWay, _unref(PAY_WAY_ENUM))), 1)\n                        ]),\n                        _: 1\n                      })\n                    ]),\n                    _: 1\n                  }))\n                : (_openBlock(), _createBlock(_component_el_tag, {\n                    key: 1,\n                    type: \"info\"\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"无支付信息\")\n                    ]),\n                    _: 1\n                  }))\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_collapse_item, { name: \"3\" }, {\n            title: _withCtx(() => [\n              _hoisted_3\n            ]),\n            default: _withCtx(() => [\n              _createVNode(_component_data_table, {\n                isShowPagination: false,\n                props: { maxHeight: 250 },\n                columns: goodsDataTableFields,\n                query: () => orderDetails.value.goodsList\n              }, null, 8, [\"query\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_collapse_item, { name: \"4\" }, {\n            title: _withCtx(() => [\n              _hoisted_4\n            ]),\n            default: _withCtx(() => [\n              _createVNode(_component_data_table, {\n                isShowPagination: false,\n                props: { maxHeight: 250 },\n                columns: couponDataTableFields,\n                query: () => orderDetails.value.couponList\n              }, null, 8, [\"query\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_collapse_item, { name: \"5\" }, {\n            title: _withCtx(() => [\n              _hoisted_5\n            ]),\n            default: _withCtx(() => [\n              (!orderDetails.value.logisticsList || orderDetails.value.logisticsList.length === 0)\n                ? (_openBlock(), _createBlock(_component_el_tag, {\n                    key: 0,\n                    type: \"info\"\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"无物流信息\")\n                    ]),\n                    _: 1\n                  }))\n                : _createCommentVNode(\"\", true),\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(orderDetails.value.logisticsList, (logisticsItem, index) => {\n                return (_openBlock(), _createBlock(_component_el_descriptions, {\n                  key: logisticsItem.logisticsNumber,\n                  title: '包裹' + (index + 1),\n                  direction: \"vertical\",\n                  column: 2,\n                  border: \"\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_el_descriptions_item, { label: \"物流单号\" }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_tag, null, {\n                          default: _withCtx(() => [\n                            _createTextVNode(_toDisplayString(logisticsItem.logisticsNumber), 1)\n                          ]),\n                          _: 2\n                        }, 1024)\n                      ]),\n                      _: 2\n                    }, 1024),\n                    _createVNode(_component_el_descriptions_item, { label: \"物流公司\" }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(logisticsItem.companyName), 1)\n                      ]),\n                      _: 2\n                    }, 1024),\n                    _createVNode(_component_el_descriptions_item, {\n                      label: \"商品列表\",\n                      span: 2\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_data_table, {\n                          isShowPagination: false,\n                          props: { maxHeight: 100 },\n                          columns: goodsDataTableFields.filter(item => ['name', 'img', 'specs', 'code', 'quantity'].includes(item.prop)),\n                          query: () => logisticsItem.goodsList\n                        }, null, 8, [\"columns\", \"query\"])\n                      ]),\n                      _: 2\n                    }, 1024)\n                  ]),\n                  _: 2\n                }, 1032, [\"title\"]))\n              }), 128))\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_collapse_item, { name: \"6\" }, {\n            title: _withCtx(() => [\n              _hoisted_6\n            ]),\n            default: _withCtx(() => [\n              (!orderDetails.value.afterSalesList || orderDetails.value.afterSalesList.length === 0)\n                ? (_openBlock(), _createBlock(_component_el_tag, {\n                    key: 0,\n                    type: \"info\"\n                  }, {\n                    default: _withCtx(() => [\n                      _createTextVNode(\"无售后信息\")\n                    ]),\n                    _: 1\n                  }))\n                : _createCommentVNode(\"\", true),\n              (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(orderDetails.value.afterSalesList, (afterSalesItem, index) => {\n                return (_openBlock(), _createBlock(_component_el_descriptions, {\n                  key: index,\n                  title: '售后' + (index + 1),\n                  direction: \"vertical\",\n                  column: 2,\n                  border: \"\"\n                }, {\n                  default: _withCtx(() => [\n                    _createVNode(_component_el_descriptions_item, { label: \"售后类型\" }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_el_tag, null, {\n                          default: _withCtx(() => [\n                            _createTextVNode(_toDisplayString(afterSalesItem.type), 1)\n                          ]),\n                          _: 2\n                        }, 1024)\n                      ]),\n                      _: 2\n                    }, 1024),\n                    _createVNode(_component_el_descriptions_item, { label: \"提交售后时间\" }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(_unref(dateFormat)(afterSalesItem.createTime, \"YYYY-MM-DD HH:mm:ss\")), 1)\n                      ]),\n                      _: 2\n                    }, 1024),\n                    _createVNode(_component_el_descriptions_item, { label: \"涉及物流单号\" }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(afterSalesItem.logisticsNumbers), 1)\n                      ]),\n                      _: 2\n                    }, 1024),\n                    _createVNode(_component_el_descriptions_item, { label: \"退款金额\" }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString((afterSalesItem.refundAmount && _unref(numberFormat)(afterSalesItem.refundAmount, 2)) || \"-\"), 1)\n                      ]),\n                      _: 2\n                    }, 1024),\n                    _createVNode(_component_el_descriptions_item, { label: \"售后原因\" }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(afterSalesItem.reason || \"-\"), 1)\n                      ]),\n                      _: 2\n                    }, 1024),\n                    _createVNode(_component_el_descriptions_item, { label: \"用户备注\" }, {\n                      default: _withCtx(() => [\n                        _createTextVNode(_toDisplayString(afterSalesItem.remark || \"-\"), 1)\n                      ]),\n                      _: 2\n                    }, 1024),\n                    _createVNode(_component_el_descriptions_item, {\n                      label: \"涉及商品列表\",\n                      span: 2\n                    }, {\n                      default: _withCtx(() => [\n                        _createVNode(_component_data_table, {\n                          isShowPagination: false,\n                          props: { maxHeight: 100 },\n                          columns: goodsDataTableFields.filter(item => ['name', 'img', 'specs', 'code', 'quantity'].includes(item.prop)),\n                          query: () => afterSalesItem.goodsList\n                        }, null, 8, [\"columns\", \"query\"])\n                      ]),\n                      _: 2\n                    }, 1024)\n                  ]),\n                  _: 2\n                }, 1032, [\"title\"]))\n              }), 128))\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }, 8, [\"modelValue\"])\n    ]),\n    _: 1\n  }, 8, [\"modelValue\"]))\n}\n}\n\n})","<!--\n * @创建者: yujinjin9@126.com\n * @创建时间: 2024-01-23 11:53:58\n * @最后修改作者: yujinjin9@126.com\n * @最后修改时间: 2024-01-26 11:54:17\n * @项目的路径: \\vue-manager-system\\src\\views\\plays\\order-list\\components\\view-order-details-dialog.vue\n * @描述: 查看订单详情信息弹窗\n-->\n<template>\n    <el-dialog v-model=\"dialogVisible\" title=\"查看订单详细信息\" class=\"common-dialog\" width=\"800px\" @closed=\"dialogClosed\">\n        <el-collapse v-model=\"activeCollapseNames\">\n            <el-collapse-item name=\"1\">\n                <template #title>\n                    <div class=\"title-bar\">订单信息</div>\n                </template>\n                <el-descriptions direction=\"vertical\" :column=\"3\" border>\n                    <el-descriptions-item label=\"订单编号\">\n                        <el-tag>{{ orderDetails.orderNo }}</el-tag>\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"订单状态\">\n                        <el-tag>{{ getEnumText(orderDetails.orderStatus, ORDER_STATUS_ENUM) }}</el-tag>\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"订单金额(元)\">\n                        {{ numberFormat(orderDetails.orderAmount, 2) }}\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"订单来源\">\n                        {{ getEnumText(orderDetails.deviceSource, DEVICE_SOURCE_ENUM) }}\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"下单时间\">\n                        {{ dateFormat(orderDetails.createTime, \"YYYY-MM-DD HH:mm:ss\") }}\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"下单用户ID\">\n                        {{ orderDetails.buyerId }}\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"下单用户名称\">\n                        {{ orderDetails.buyerName }}\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"下单用户手机号\">\n                        {{ orderDetails.buyerMobileNumber }}\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"收货人姓名\">\n                        {{ orderDetails.receiver }}\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"收货人手机号\">\n                        {{ orderDetails.receiverMobileNumber }}\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"收货地址\" :span=\"3\">\n                        {{ orderDetails.receiverAddress }}\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"用户备注\" :span=\"3\">\n                        {{ orderDetails.remark || \"-\" }}\n                    </el-descriptions-item>\n                </el-descriptions>\n            </el-collapse-item>\n            <el-collapse-item name=\"2\">\n                <template #title>\n                    <div class=\"title-bar\">支付信息</div>\n                </template>\n                <el-descriptions direction=\"vertical\" :column=\"2\" border v-if=\"orderDetails.payInfo\">\n                    <el-descriptions-item label=\"支付流水号\">\n                        <el-tag>{{ orderDetails.payInfo.payNo }}</el-tag>\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"支付金额(元)\">\n                        {{ numberFormat(orderDetails.payInfo.payAmount, 2) }}\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"支付时间\">\n                        {{ dateFormat(orderDetails.payInfo.payTime, \"YYYY-MM-DD HH:mm:ss\") }}\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"支付方式\">\n                        {{ getEnumText(orderDetails.payInfo.payWay, PAY_WAY_ENUM) }}\n                    </el-descriptions-item>\n                </el-descriptions>\n                <el-tag v-else type=\"info\">无支付信息</el-tag>\n            </el-collapse-item>\n            <el-collapse-item name=\"3\">\n                <template #title>\n                    <div class=\"title-bar\">商品列表</div>\n                </template>\n                <data-table :isShowPagination=\"false\" :props=\"{ maxHeight: 250 }\" :columns=\"goodsDataTableFields\" :query=\"() => orderDetails.goodsList\" />\n            </el-collapse-item>\n            <el-collapse-item name=\"4\">\n                <template #title>\n                    <div class=\"title-bar\">使用优惠券列表</div>\n                </template>\n                <data-table :isShowPagination=\"false\" :props=\"{ maxHeight: 250 }\" :columns=\"couponDataTableFields\" :query=\"() => orderDetails.couponList\" />\n            </el-collapse-item>\n            <el-collapse-item name=\"5\">\n                <template #title>\n                    <div class=\"title-bar\">物流信息</div>\n                </template>\n                <el-tag v-if=\"!orderDetails.logisticsList || orderDetails.logisticsList.length === 0\" type=\"info\">无物流信息</el-tag>\n                <el-descriptions\n                    v-for=\"(logisticsItem, index) in orderDetails.logisticsList\"\n                    :key=\"logisticsItem.logisticsNumber\"\n                    :title=\"'包裹' + (index + 1)\"\n                    direction=\"vertical\"\n                    :column=\"2\"\n                    border\n                >\n                    <el-descriptions-item label=\"物流单号\">\n                        <el-tag>{{ logisticsItem.logisticsNumber }}</el-tag>\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"物流公司\">\n                        {{ logisticsItem.companyName }}\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"商品列表\" :span=\"2\">\n                        <data-table\n                            :isShowPagination=\"false\"\n                            :props=\"{ maxHeight: 100 }\"\n                            :columns=\"goodsDataTableFields.filter(item => ['name', 'img', 'specs', 'code', 'quantity'].includes(item.prop))\"\n                            :query=\"() => logisticsItem.goodsList\"\n                        />\n                    </el-descriptions-item>\n                </el-descriptions>\n            </el-collapse-item>\n            <el-collapse-item name=\"6\">\n                <template #title>\n                    <div class=\"title-bar\">售后信息</div>\n                </template>\n                <el-tag v-if=\"!orderDetails.afterSalesList || orderDetails.afterSalesList.length === 0\" type=\"info\">无售后信息</el-tag>\n                <el-descriptions v-for=\"(afterSalesItem, index) in orderDetails.afterSalesList\" :key=\"index\" :title=\"'售后' + (index + 1)\" direction=\"vertical\" :column=\"2\" border>\n                    <el-descriptions-item label=\"售后类型\">\n                        <el-tag>{{ afterSalesItem.type }}</el-tag>\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"提交售后时间\">\n                        {{ dateFormat(afterSalesItem.createTime, \"YYYY-MM-DD HH:mm:ss\") }}\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"涉及物流单号\">\n                        {{ afterSalesItem.logisticsNumbers }}\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"退款金额\">\n                        {{ (afterSalesItem.refundAmount && numberFormat(afterSalesItem.refundAmount, 2)) || \"-\" }}\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"售后原因\">\n                        {{ afterSalesItem.reason || \"-\" }}\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"用户备注\">\n                        {{ afterSalesItem.remark || \"-\" }}\n                    </el-descriptions-item>\n                    <el-descriptions-item label=\"涉及商品列表\" :span=\"2\">\n                        <data-table\n                            :isShowPagination=\"false\"\n                            :props=\"{ maxHeight: 100 }\"\n                            :columns=\"goodsDataTableFields.filter(item => ['name', 'img', 'specs', 'code', 'quantity'].includes(item.prop))\"\n                            :query=\"() => afterSalesItem.goodsList\"\n                        />\n                    </el-descriptions-item>\n                </el-descriptions>\n            </el-collapse-item>\n        </el-collapse>\n        <template #footer>\n            <div class=\"dialog-footer\">\n                <el-button @click=\"dialogVisible = false\">关闭弹窗</el-button>\n            </div>\n        </template>\n    </el-dialog>\n</template>\n<script setup lang=\"ts\">\nimport { ref } from \"vue\";\nimport { dateFormat, numberFormat } from \"@yujinjin/utils\";\nimport demoAPI from \"@api/demo\";\nimport { DEVICE_SOURCE_ENUM, ORDER_STATUS_ENUM, PAY_WAY_ENUM } from \"../constants\";\n\nconst props = defineProps({\n    row: {\n        type: Object\n    }\n});\n\nconst emits = defineEmits([\"close\"]);\n\n// 当前激活的折叠面板列表\nconst activeCollapseNames = ref([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"]);\n\n// 弹窗关闭事件\nconst dialogClosed = function () {\n    emits(\"close\", false);\n};\n\n// 弹窗显示状态\nconst dialogVisible = ref(false);\n\n// 订单详情信息\nconst orderDetails = ref<Record<string, any>>({});\n\n// 订单商品列表\nconst goodsDataTableFields = [\n    {\n        label: \"商品名称\",\n        prop: \"name\",\n        width: 100,\n        fixed: true\n    },\n    {\n        label: \"参加活动\",\n        prop: \"activity\",\n        width: 100\n    },\n    {\n        label: \"商品图片\",\n        prop: \"img\",\n        type: \"image\",\n        width: 100\n    },\n    {\n        label: \"商品CODE\",\n        prop: \"code\",\n        width: 100\n    },\n    {\n        label: \"商品规格\",\n        prop: \"specs\",\n        minWidth: 100\n    },\n    {\n        label: \"商品数量\",\n        prop: \"quantity\",\n        type: \"number\",\n        width: 100\n    },\n    {\n        label: \"商品金额(元)\",\n        prop: \"price\",\n        type: \"number\",\n        digit: 2,\n        width: 100\n    },\n    {\n        label: \"优惠金额(元)\",\n        prop: \"discountPriceInYuan\",\n        type: \"number\",\n        digit: 2,\n        width: 100\n    },\n    {\n        label: \"小计(元)\",\n        prop: \"totalAmount\",\n        type: \"number\",\n        digit: 2,\n        formatter: function (row) {\n            return row.price * row.quantity;\n        },\n        width: 100\n    }\n];\n\n// 使用优惠券列表\nconst couponDataTableFields = [\n    {\n        label: \"优惠类型\",\n        prop: \"type\",\n        width: 120\n    },\n    {\n        label: \"券名称\",\n        prop: \"name\",\n        minWidth: 120\n    },\n    {\n        label: \"券面优惠金额\",\n        prop: \"amount\",\n        type: \"number\",\n        digit: 2,\n        width: 100\n    },\n    {\n        label: \"券数量\",\n        prop: \"quantity\",\n        type: \"number\",\n        width: 100\n    }\n];\n\n// 获取枚举值\nconst getEnumText = function (value: string | number, datas: Array<Record<string, string | number>>) {\n    return datas.find(item => item.value === value)?.label || \"-\";\n};\n\n// 初始化\nconst init = async function () {\n    try {\n        orderDetails.value = (await demoAPI.queryOrderDetails(props.row!.orderNo, { isShowLoading: true })) as Record<string, any>;\n        dialogVisible.value = true;\n    } catch (error) {\n        dialogClosed();\n    }\n};\n\ninit();\n</script>\n<style lang=\"scss\" scoped>\n.title-bar {\n    line-height: 22px;\n    padding: 8px 0px 16px 12px;\n    position: relative;\n    font-weight: 500;\n    color: rgba(0, 0, 0, 0.85);\n    font-size: 16px;\n\n    &::before {\n        content: \"\";\n        position: absolute;\n        left: 0px;\n        top: 11px;\n        width: 4px;\n        height: 16px;\n        background-color: #00b85c;\n        border-radius: 2px;\n    }\n}\n</style>\n","import script from \"./view-order-details-dialog.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./view-order-details-dialog.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./view-order-details-dialog.vue?vue&type=style&index=0&id=6f555546&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-6f555546\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withModifiers as _withModifiers, withCtx as _withCtx, createVNode as _createVNode, unref as _unref, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString, vShow as _vShow, createBlock as _createBlock, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-bd6baa1e\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"header-content\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"title-bar\" }, \"筛选条件\", -1))\nconst _hoisted_3 = { class: \"header-content\" }\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"title-bar\" }, \"导入字段\", -1))\nconst _hoisted_5 = {\n  key: 0,\n  class: \"loading-text\"\n}\nconst _hoisted_6 = {\n  key: 1,\n  class: \"empty-text\"\n}\nconst _hoisted_7 = {\n  key: 2,\n  class: \"checkbox-list-wrapper\"\n}\nconst _hoisted_8 = [\"title\"]\nconst _hoisted_9 = {\n  key: 0,\n  class: \"virtually-progress-panel\"\n}\nconst _hoisted_10 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"state-text\" }, \"正在导出数据，请耐心等待...\", -1))\n\nimport type { PropType } from \"vue\";\nimport type { Components } from \"/#/components\";\nimport { ref, watch, computed, reactive } from \"vue\";\nimport { Search } from \"@element-plus/icons-vue\";\nimport { debounce, getObjectProperty, dateFormat } from \"@yujinjin/utils\";\nimport commonApi from \"@/api/common\";\nimport virtuallyProgress from \"@views/components/virtually-progress.vue\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'excel-export-dialog',\n  props: {\n    isShow: {\n        type: Boolean\n    },\n    // 搜索字段列表\n    searchFields: {\n        type: Array as PropType<Components.SearchFormField[]>,\n        default: function () {\n            return [];\n        }\n    },\n    searchFormValue: {\n        type: Object,\n        default() {\n            return {};\n        }\n    },\n    tableColumns: {\n        type: Array as PropType<Components.TableColumn<any>[]>,\n        default() {\n            return [];\n        }\n    }\n},\n  emits: [\"update:isShow\"],\n  setup(__props, { emit: __emit }) {\n\nconst props = __props;\n\nconst emits = __emit;\n\n// 弹窗显示状态\nconst dialogVisible = ref(false);\n\nconst activeCollapseNames = ref([\"1\", \"2\"]);\n\n// 是否记住当前筛选条件的值\nconst isStorageSearchFormValue = ref(false);\n\n// 搜索表单实例\nconst searchFormRef = ref<Components.SearchFormRef>();\n\n// 搜索加载中\nconst searchLoading = ref(false);\n\n// 沒有数据\nconst noDataForSearch = ref(false);\n\n// 筛选字段的搜索关键字\nconst keyword = ref<string>(\"\");\n\n// 筛选字段是否全选\nconst checkAll = ref<boolean>(true);\n\n// 全选不确定状态\nconst isIndeterminate = ref(false);\n\n// 导出字段列表\nconst exportFields = ref<Array<Record<string, any>>>([]);\n\n// 处理信息\nconst progressInfo = reactive({\n    isShow: false, // 是否显示处理进度\n    isLoading: false // 是否正在导出数据\n});\n\n// 当前选中的数据列表\nconst selectedFields = computed(() => exportFields.value.filter(item => item.selected));\n\n// 至少选择列的数量\nconst minSelecedFields = computed(() => exportFields.value.filter(item => item.disabled));\n\n// 初始化筛选条件的值\nconst initSearchFieldsValue = function () {\n    if (!isStorageSearchFormValue.value && searchFormRef.value) {\n        searchFormRef.value!.changeFormFields(function (formFields: Components.SearchFormField[]) {\n            formFields.forEach(fieldItem => {\n                if (fieldItem.props) {\n                    fieldItem.value = getObjectProperty(props.searchFormValue, fieldItem.name, null);\n                }\n            });\n        });\n    }\n};\n\n// 初始化导出字段列表\nconst initExportFields = function () {\n    exportFields.value = [];\n    props.tableColumns.forEach(column => {\n        if (column.prop && (!column.type || ![\"index\", \"selection\", \"expand\", \"action\"].includes(column.type))) {\n            exportFields.value.push({\n                name: column.label || \"-\",\n                key: column.prop,\n                disabled: !!column.fixed,\n                isShow: true,\n                selected: true\n            });\n        }\n    });\n};\n\n// 弹窗关闭事件\nconst dialogClosed = function () {\n    emits(\"update:isShow\", false);\n};\n\n/**\n * 复选框check变化\n * @param selected check的值\n * @param isCheckAll 是否全选\n */\nconst checkChange = function (selected: boolean, isCheckAll: boolean) {\n    if (isCheckAll) {\n        exportFields.value.forEach(item => {\n            if (item.isShow && !item.disabled) {\n                item.selected = selected;\n            }\n        });\n        isIndeterminate.value = !selected && exportFields.value.some(item => item.selected);\n    } else {\n        // 当前未分组，其childList中的数据选择有变化\n        const selectedNumber = exportFields.value.filter(item => item.selected && item.isShow).length;\n        const totalNumber = exportFields.value.filter(item => item.isShow).length;\n        checkAll.value = totalNumber > 0 && selectedNumber === totalNumber;\n        isIndeterminate.value = selectedNumber > 0 && selectedNumber < totalNumber;\n    }\n};\n\n// 搜索（防抖）\nconst searchDebounce = debounce(function () {\n    exportFields.value.forEach(item => {\n        item.isShow = (item.name as string).includes(keyword.value);\n    });\n    checkChange(checkAll.value, false);\n    searchLoading.value = false;\n    noDataForSearch.value = exportFields.value.every(item => !item.isShow);\n}, 200);\n\n// 搜索操作\nconst searchHandle = function () {\n    searchLoading.value = true;\n    searchDebounce();\n};\n\n// 导出功能\nconst submitHandle = function () {\n    if (progressInfo.isLoading) {\n        return;\n    }\n    progressInfo.isShow = true;\n    progressInfo.isLoading = true;\n    setTimeout(\n        async () => {\n            await commonApi.download({\n                type: \"a\",\n                url: require(\"@assets/templates/批量新增菜单模板.xlsx\"),\n                fileName: \"订单数据导出(\" + dateFormat(Date.now()) + \").xlsx\"\n            });\n            progressInfo.isLoading = false;\n        },\n        parseInt((Math.random() * 1000 * 10).toFixed(0), 10)\n    );\n};\n\nwatch(\n    () => props.tableColumns,\n    () => initExportFields(),\n    {\n        immediate: true\n    }\n);\n\nwatch(\n    () => props.isShow,\n    value => {\n        if (value) {\n            dialogVisible.value = value;\n            initSearchFieldsValue();\n        }\n    }\n);\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_checkbox = _resolveComponent(\"el-checkbox\")!\n  const _component_search_form = _resolveComponent(\"search-form\")!\n  const _component_el_collapse_item = _resolveComponent(\"el-collapse-item\")!\n  const _component_el_input = _resolveComponent(\"el-input\")!\n  const _component_el_col = _resolveComponent(\"el-col\")!\n  const _component_el_row = _resolveComponent(\"el-row\")!\n  const _component_el_collapse = _resolveComponent(\"el-collapse\")!\n  const _component_el_button = _resolveComponent(\"el-button\")!\n  const _component_el_dialog = _resolveComponent(\"el-dialog\")!\n\n  return (_openBlock(), _createBlock(_component_el_dialog, {\n    modelValue: dialogVisible.value,\n    \"onUpdate:modelValue\": _cache[9] || (_cache[9] = ($event: any) => ((dialogVisible).value = $event)),\n    title: \"订单Excel大数据导出\",\n    class: \"common-dialog\",\n    width: \"800px\",\n    onClosed: dialogClosed\n  }, {\n    footer: _withCtx(() => [\n      _createVNode(_component_el_button, {\n        onClick: _cache[8] || (_cache[8] = ($event: any) => (dialogVisible.value = false))\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"取消\")\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_el_button, {\n        disabled: selectedFields.value.length <= minSelecedFields.value.length,\n        type: \"primary\",\n        loading: progressInfo.isLoading,\n        onClick: submitHandle\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"确定导出\")\n        ]),\n        _: 1\n      }, 8, [\"disabled\", \"loading\"])\n    ]),\n    default: _withCtx(() => [\n      _withDirectives(_createVNode(_component_el_collapse, {\n        modelValue: activeCollapseNames.value,\n        \"onUpdate:modelValue\": _cache[6] || (_cache[6] = ($event: any) => ((activeCollapseNames).value = $event)),\n        style: {\"border\":\"0px\"}\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_el_collapse_item, { name: \"1\" }, {\n            title: _withCtx(() => [\n              _createElementVNode(\"div\", _hoisted_1, [\n                _hoisted_2,\n                _createVNode(_component_el_checkbox, {\n                  modelValue: isStorageSearchFormValue.value,\n                  \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((isStorageSearchFormValue).value = $event)),\n                  onClick: _cache[1] || (_cache[1] = _withModifiers(() => {}, [\"stop\"]))\n                }, {\n                  default: _withCtx(() => [\n                    _createTextVNode(\"记住当前筛选项的值\")\n                  ]),\n                  _: 1\n                }, 8, [\"modelValue\"])\n              ])\n            ]),\n            default: _withCtx(() => [\n              _createVNode(_component_search_form, {\n                ref_key: \"searchFormRef\",\n                ref: searchFormRef,\n                fields: __props.searchFields,\n                isShowSearchButton: false,\n                isShowCollapse: false,\n                onFieldsChange: initSearchFieldsValue\n              }, null, 8, [\"fields\"])\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_collapse_item, { name: \"2\" }, {\n            title: _withCtx(() => [\n              _createElementVNode(\"div\", _hoisted_3, [\n                _hoisted_4,\n                _createVNode(_component_el_input, {\n                  modelValue: keyword.value,\n                  \"onUpdate:modelValue\": _cache[2] || (_cache[2] = ($event: any) => ((keyword).value = $event)),\n                  modelModifiers: { trim: true },\n                  onClick: _cache[3] || (_cache[3] = _withModifiers(() => {}, [\"stop\"])),\n                  style: {\"width\":\"360px\"},\n                  clearable: \"\",\n                  placeholder: \"搜索字段\",\n                  \"prefix-icon\": _unref(Search),\n                  onInput: searchHandle\n                }, null, 8, [\"modelValue\", \"prefix-icon\"])\n              ])\n            ]),\n            default: _withCtx(() => [\n              (searchLoading.value)\n                ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, \"数据匹配中...\"))\n                : (noDataForSearch.value)\n                  ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \"未匹配到数据\"))\n                  : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [\n                      _createVNode(_component_el_row, null, {\n                        default: _withCtx(() => [\n                          _createVNode(_component_el_col, { span: 24 }, {\n                            default: _withCtx(() => [\n                              _createVNode(_component_el_checkbox, {\n                                modelValue: checkAll.value,\n                                \"onUpdate:modelValue\": _cache[4] || (_cache[4] = ($event: any) => ((checkAll).value = $event)),\n                                indeterminate: isIndeterminate.value,\n                                label: \"全选\",\n                                onChange: _cache[5] || (_cache[5] = ($event: any) => (checkChange(checkAll.value, true)))\n                              }, null, 8, [\"modelValue\", \"indeterminate\"])\n                            ]),\n                            _: 1\n                          }),\n                          (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(exportFields.value, (item) => {\n                            return _withDirectives((_openBlock(), _createBlock(_component_el_col, {\n                              key: item.key,\n                              span: 8\n                            }, {\n                              default: _withCtx(() => [\n                                _createVNode(_component_el_checkbox, {\n                                  modelValue: item.selected,\n                                  \"onUpdate:modelValue\": ($event: any) => ((item.selected) = $event),\n                                  disabled: item.disabled,\n                                  onChange: ($event: any) => (checkChange(item.selected, false))\n                                }, {\n                                  default: _withCtx(() => [\n                                    _createElementVNode(\"span\", {\n                                      class: \"checkbox-label-text\",\n                                      title: item.name\n                                    }, _toDisplayString(item.name), 9, _hoisted_8)\n                                  ]),\n                                  _: 2\n                                }, 1032, [\"modelValue\", \"onUpdate:modelValue\", \"disabled\", \"onChange\"])\n                              ]),\n                              _: 2\n                            }, 1024)), [\n                              [_vShow, item.isShow]\n                            ])\n                          }), 128))\n                        ]),\n                        _: 1\n                      })\n                    ]))\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }, 8, [\"modelValue\"]), [\n        [_vShow, !progressInfo.isShow]\n      ]),\n      (progressInfo.isShow)\n        ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [\n            _createVNode(virtuallyProgress, {\n              finished: !progressInfo.isLoading,\n              onAfterFinished: _cache[7] || (_cache[7] = ($event: any) => (progressInfo.isShow = false))\n            }, {\n              default: _withCtx(() => [\n                _hoisted_10\n              ]),\n              _: 1\n            }, 8, [\"finished\"])\n          ]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _: 1\n  }, 8, [\"modelValue\"]))\n}\n}\n\n})","<!--\n * @创建者: yujinjin9@126.com\n * @创建时间: 2024-03-04 16:06:43\n * @最后修改作者: yujinjin9@126.com\n * @最后修改时间: 2024-03-05 17:08:56\n * @项目的路径: \\vue-manager-system\\src\\views\\plays\\order-list\\components\\excel-export-dialog.vue\n * @描述: Excel大数据导出弹窗\n-->\n<template>\n    <el-dialog v-model=\"dialogVisible\" title=\"订单Excel大数据导出\" class=\"common-dialog\" width=\"800px\" @closed=\"dialogClosed\">\n        <el-collapse v-model=\"activeCollapseNames\" v-show=\"!progressInfo.isShow\" style=\"border: 0px\">\n            <el-collapse-item name=\"1\">\n                <template #title>\n                    <div class=\"header-content\">\n                        <div class=\"title-bar\">筛选条件</div>\n                        <el-checkbox v-model=\"isStorageSearchFormValue\" @click.stop>记住当前筛选项的值</el-checkbox>\n                    </div>\n                </template>\n                <search-form ref=\"searchFormRef\" :fields=\"searchFields\" :isShowSearchButton=\"false\" :isShowCollapse=\"false\" @fieldsChange=\"initSearchFieldsValue\" />\n            </el-collapse-item>\n            <el-collapse-item name=\"2\">\n                <template #title>\n                    <div class=\"header-content\">\n                        <div class=\"title-bar\">导入字段</div>\n                        <el-input v-model.trim=\"keyword\" @click.stop style=\"width: 360px\" clearable placeholder=\"搜索字段\" :prefix-icon=\"Search\" @input=\"searchHandle\" />\n                    </div>\n                </template>\n                <div v-if=\"searchLoading\" class=\"loading-text\">数据匹配中...</div>\n                <div v-else-if=\"noDataForSearch\" class=\"empty-text\">未匹配到数据</div>\n                <div v-else class=\"checkbox-list-wrapper\">\n                    <el-row>\n                        <el-col :span=\"24\">\n                            <el-checkbox v-model=\"checkAll\" :indeterminate=\"isIndeterminate\" label=\"全选\" @change=\"checkChange(checkAll, true)\" />\n                        </el-col>\n                        <el-col v-for=\"item in exportFields\" :key=\"item.key\" v-show=\"item.isShow\" :span=\"8\">\n                            <el-checkbox v-model=\"item.selected\" :disabled=\"item.disabled\" @change=\"checkChange(item.selected, false)\">\n                                <span class=\"checkbox-label-text\" :title=\"item.name\">{{ item.name }}</span>\n                            </el-checkbox>\n                        </el-col>\n                    </el-row>\n                </div>\n            </el-collapse-item>\n        </el-collapse>\n        <div v-if=\"progressInfo.isShow\" class=\"virtually-progress-panel\">\n            <virtually-progress :finished=\"!progressInfo.isLoading\" @after-finished=\"progressInfo.isShow = false\">\n                <div class=\"state-text\">正在导出数据，请耐心等待...</div>\n            </virtually-progress>\n        </div>\n        <template #footer>\n            <el-button @click=\"dialogVisible = false\">取消</el-button>\n            <el-button :disabled=\"selectedFields.length <= minSelecedFields.length\" type=\"primary\" :loading=\"progressInfo.isLoading\" @click=\"submitHandle\">确定导出</el-button>\n        </template>\n    </el-dialog>\n</template>\n<script setup lang=\"ts\">\nimport type { PropType } from \"vue\";\nimport type { Components } from \"/#/components\";\nimport { ref, watch, computed, reactive } from \"vue\";\nimport { Search } from \"@element-plus/icons-vue\";\nimport { debounce, getObjectProperty, dateFormat } from \"@yujinjin/utils\";\nimport commonApi from \"@/api/common\";\nimport virtuallyProgress from \"@views/components/virtually-progress.vue\";\n\nconst props = defineProps({\n    isShow: {\n        type: Boolean\n    },\n    // 搜索字段列表\n    searchFields: {\n        type: Array as PropType<Components.SearchFormField[]>,\n        default: function () {\n            return [];\n        }\n    },\n    searchFormValue: {\n        type: Object,\n        default() {\n            return {};\n        }\n    },\n    tableColumns: {\n        type: Array as PropType<Components.TableColumn<any>[]>,\n        default() {\n            return [];\n        }\n    }\n});\n\nconst emits = defineEmits([\"update:isShow\"]);\n\n// 弹窗显示状态\nconst dialogVisible = ref(false);\n\nconst activeCollapseNames = ref([\"1\", \"2\"]);\n\n// 是否记住当前筛选条件的值\nconst isStorageSearchFormValue = ref(false);\n\n// 搜索表单实例\nconst searchFormRef = ref<Components.SearchFormRef>();\n\n// 搜索加载中\nconst searchLoading = ref(false);\n\n// 沒有数据\nconst noDataForSearch = ref(false);\n\n// 筛选字段的搜索关键字\nconst keyword = ref<string>(\"\");\n\n// 筛选字段是否全选\nconst checkAll = ref<boolean>(true);\n\n// 全选不确定状态\nconst isIndeterminate = ref(false);\n\n// 导出字段列表\nconst exportFields = ref<Array<Record<string, any>>>([]);\n\n// 处理信息\nconst progressInfo = reactive({\n    isShow: false, // 是否显示处理进度\n    isLoading: false // 是否正在导出数据\n});\n\n// 当前选中的数据列表\nconst selectedFields = computed(() => exportFields.value.filter(item => item.selected));\n\n// 至少选择列的数量\nconst minSelecedFields = computed(() => exportFields.value.filter(item => item.disabled));\n\n// 初始化筛选条件的值\nconst initSearchFieldsValue = function () {\n    if (!isStorageSearchFormValue.value && searchFormRef.value) {\n        searchFormRef.value!.changeFormFields(function (formFields: Components.SearchFormField[]) {\n            formFields.forEach(fieldItem => {\n                if (fieldItem.props) {\n                    fieldItem.value = getObjectProperty(props.searchFormValue, fieldItem.name, null);\n                }\n            });\n        });\n    }\n};\n\n// 初始化导出字段列表\nconst initExportFields = function () {\n    exportFields.value = [];\n    props.tableColumns.forEach(column => {\n        if (column.prop && (!column.type || ![\"index\", \"selection\", \"expand\", \"action\"].includes(column.type))) {\n            exportFields.value.push({\n                name: column.label || \"-\",\n                key: column.prop,\n                disabled: !!column.fixed,\n                isShow: true,\n                selected: true\n            });\n        }\n    });\n};\n\n// 弹窗关闭事件\nconst dialogClosed = function () {\n    emits(\"update:isShow\", false);\n};\n\n/**\n * 复选框check变化\n * @param selected check的值\n * @param isCheckAll 是否全选\n */\nconst checkChange = function (selected: boolean, isCheckAll: boolean) {\n    if (isCheckAll) {\n        exportFields.value.forEach(item => {\n            if (item.isShow && !item.disabled) {\n                item.selected = selected;\n            }\n        });\n        isIndeterminate.value = !selected && exportFields.value.some(item => item.selected);\n    } else {\n        // 当前未分组，其childList中的数据选择有变化\n        const selectedNumber = exportFields.value.filter(item => item.selected && item.isShow).length;\n        const totalNumber = exportFields.value.filter(item => item.isShow).length;\n        checkAll.value = totalNumber > 0 && selectedNumber === totalNumber;\n        isIndeterminate.value = selectedNumber > 0 && selectedNumber < totalNumber;\n    }\n};\n\n// 搜索（防抖）\nconst searchDebounce = debounce(function () {\n    exportFields.value.forEach(item => {\n        item.isShow = (item.name as string).includes(keyword.value);\n    });\n    checkChange(checkAll.value, false);\n    searchLoading.value = false;\n    noDataForSearch.value = exportFields.value.every(item => !item.isShow);\n}, 200);\n\n// 搜索操作\nconst searchHandle = function () {\n    searchLoading.value = true;\n    searchDebounce();\n};\n\n// 导出功能\nconst submitHandle = function () {\n    if (progressInfo.isLoading) {\n        return;\n    }\n    progressInfo.isShow = true;\n    progressInfo.isLoading = true;\n    setTimeout(\n        async () => {\n            await commonApi.download({\n                type: \"a\",\n                url: require(\"@assets/templates/批量新增菜单模板.xlsx\"),\n                fileName: \"订单数据导出(\" + dateFormat(Date.now()) + \").xlsx\"\n            });\n            progressInfo.isLoading = false;\n        },\n        parseInt((Math.random() * 1000 * 10).toFixed(0), 10)\n    );\n};\n\nwatch(\n    () => props.tableColumns,\n    () => initExportFields(),\n    {\n        immediate: true\n    }\n);\n\nwatch(\n    () => props.isShow,\n    value => {\n        if (value) {\n            dialogVisible.value = value;\n            initSearchFieldsValue();\n        }\n    }\n);\n</script>\n<style lang=\"scss\" scoped>\n.header-content {\n    display: flex;\n    align-items: center;\n    height: 100%;\n\n    .title-bar {\n        line-height: 24px;\n        padding: 0px 12px;\n        // height: 100%;\n        // padding: 8px 0px 16px 12px;\n        position: relative;\n        font-weight: 500;\n        color: rgba(0, 0, 0, 0.85);\n        font-size: 16px;\n\n        &::before {\n            content: \"\";\n            position: absolute;\n            left: 0px;\n            top: 4px;\n            width: 4px;\n            height: 16px;\n            background-color: #00b85c;\n            border-radius: 2px;\n        }\n    }\n}\n\n:deep(.search-panel) {\n    border-bottom: 0px;\n}\n\n.loading-text,\n.empty-text {\n    padding: 20px;\n    text-align: center;\n    color: rgba(0, 0, 0, 0.45);\n}\n\n.checkbox-list-wrapper {\n    padding: 0px 12px;\n    .el-checkbox__label {\n        display: inline-flex;\n    }\n\n    .checkbox-label-text {\n        display: inline-block;\n        white-space: nowrap;\n        word-wrap: normal;\n        width: 215px;\n        overflow: hidden;\n        text-overflow: ellipsis;\n        line-height: 30px;\n    }\n}\n\n.virtually-progress-panel {\n    height: 350px;\n    padding: 12px;\n    display: flex;\n    align-items: center;\n}\n</style>\n","import script from \"./excel-export-dialog.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./excel-export-dialog.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./excel-export-dialog.vue?vue&type=style&index=0&id=bd6baa1e&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-bd6baa1e\"]])\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nimport type { Components } from \"/#/components\";\nimport { ref, reactive } from \"vue\";\nimport demoAPI from \"@api/demo\";\nimport { ElMessage } from \"element-plus\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'add-or-update-form-dialog',\n  props: {\n    // 是否显示弹窗\n    isShow: {\n        type: Boolean,\n        default: false\n    }\n},\n  emits: [\"update:isShow\", \"refresh\"],\n  setup(__props, { emit: __emit }) {\n\n\n\nconst emits = __emit;\n\nconst dialogFormRef = ref<Components.DialogFormRef>();\n\n// 输入表单信息\nconst inputForm = reactive<Components.InputForm>({\n    columns: 2,\n    fields: [\n        {\n            name: \"orderNo\",\n            label: \"订单号\",\n            rules: [{ required: true, message: \"请填写订单号\" }]\n        },\n        {\n            name: \"receiveMan\",\n            label: \"收货人\",\n            rules: [{ required: true, message: \"请填写收货人\" }]\n        },\n        {\n            name: \"price\",\n            label: \"价格\"\n        },\n        {\n            name: \"receiveManTel\",\n            label: \"收货人手机号\"\n        },\n        {\n            name: \"sendMan\",\n            label: \"购买人\"\n        },\n        {\n            name: \"fromAbroad\",\n            label: \"是否跨境\",\n            type: \"select\",\n            data: [\n                { label: \"是\", value: true },\n                { label: \"否\", value: false }\n            ]\n        },\n        {\n            name: \"tags\",\n            label: \"标签\",\n            props: {\n                placeholder: \"标签，多个用'|'分割\"\n            }\n        },\n        {\n            name: \"sex\",\n            label: \"性别\",\n            type: \"radio\",\n            data: [\n                { label: \"男\", value: 1 },\n                { label: \"女\", value: 2 }\n            ]\n        },\n        {\n            name: \"activeStatus\",\n            label: \"状态\",\n            type: \"select\",\n            data: [\n                { label: \"激活\", value: true },\n                { label: \"冻结\", value: false }\n            ]\n        },\n        {\n            name: \"imgs\",\n            label: \"图片\",\n            type: \"imgUpload\",\n            span: 24,\n            props: {\n                uploadProps: {\n                    multiple: true\n                }\n            }\n        },\n        {\n            name: \"remark\",\n            label: \"备注\",\n            span: 24,\n            type: \"webEditor\"\n        }\n    ]\n});\n\n// 底部按钮列表\nconst buttons = ref<Components.FormButton[]>([\n    {\n        text: \"取消\"\n    },\n    {\n        text: \"保存\",\n        props: { type: \"primary\" },\n        click: async function (inputFormValue) {\n            await dialogFormRef.value?.validate();\n            await demoAPI.addOrder(inputFormValue);\n            ElMessage.success(\"操作成功\");\n            emits(\"update:isShow\", false);\n            emits(\"refresh\");\n        }\n    }\n]);\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_dialog_form = _resolveComponent(\"dialog-form\")!\n\n  return (_openBlock(), _createBlock(_component_dialog_form, {\n    ref_key: \"dialogFormRef\",\n    ref: dialogFormRef,\n    isShow: __props.isShow,\n    buttons: buttons.value,\n    inputFormProps: inputForm,\n    dialogProps: { title: '新增订单数据', width: '800px' },\n    onClose: _cache[0] || (_cache[0] = ($event: any) => (emits('update:isShow', false)))\n  }, null, 8, [\"isShow\", \"buttons\", \"inputFormProps\"]))\n}\n}\n\n})","<template>\n    <dialog-form ref=\"dialogFormRef\" :isShow=\"isShow\" :buttons=\"buttons\" :inputFormProps=\"inputForm\" :dialogProps=\"{ title: '新增订单数据', width: '800px' }\" @close=\"emits('update:isShow', false)\" />\n</template>\n<script setup lang=\"ts\">\nimport type { Components } from \"/#/components\";\nimport { ref, reactive } from \"vue\";\nimport demoAPI from \"@api/demo\";\nimport { ElMessage } from \"element-plus\";\n\ndefineProps({\n    // 是否显示弹窗\n    isShow: {\n        type: Boolean,\n        default: false\n    }\n});\n\nconst emits = defineEmits([\"update:isShow\", \"refresh\"]);\n\nconst dialogFormRef = ref<Components.DialogFormRef>();\n\n// 输入表单信息\nconst inputForm = reactive<Components.InputForm>({\n    columns: 2,\n    fields: [\n        {\n            name: \"orderNo\",\n            label: \"订单号\",\n            rules: [{ required: true, message: \"请填写订单号\" }]\n        },\n        {\n            name: \"receiveMan\",\n            label: \"收货人\",\n            rules: [{ required: true, message: \"请填写收货人\" }]\n        },\n        {\n            name: \"price\",\n            label: \"价格\"\n        },\n        {\n            name: \"receiveManTel\",\n            label: \"收货人手机号\"\n        },\n        {\n            name: \"sendMan\",\n            label: \"购买人\"\n        },\n        {\n            name: \"fromAbroad\",\n            label: \"是否跨境\",\n            type: \"select\",\n            data: [\n                { label: \"是\", value: true },\n                { label: \"否\", value: false }\n            ]\n        },\n        {\n            name: \"tags\",\n            label: \"标签\",\n            props: {\n                placeholder: \"标签，多个用'|'分割\"\n            }\n        },\n        {\n            name: \"sex\",\n            label: \"性别\",\n            type: \"radio\",\n            data: [\n                { label: \"男\", value: 1 },\n                { label: \"女\", value: 2 }\n            ]\n        },\n        {\n            name: \"activeStatus\",\n            label: \"状态\",\n            type: \"select\",\n            data: [\n                { label: \"激活\", value: true },\n                { label: \"冻结\", value: false }\n            ]\n        },\n        {\n            name: \"imgs\",\n            label: \"图片\",\n            type: \"imgUpload\",\n            span: 24,\n            props: {\n                uploadProps: {\n                    multiple: true\n                }\n            }\n        },\n        {\n            name: \"remark\",\n            label: \"备注\",\n            span: 24,\n            type: \"webEditor\"\n        }\n    ]\n});\n\n// 底部按钮列表\nconst buttons = ref<Components.FormButton[]>([\n    {\n        text: \"取消\"\n    },\n    {\n        text: \"保存\",\n        props: { type: \"primary\" },\n        click: async function (inputFormValue) {\n            await dialogFormRef.value?.validate();\n            await demoAPI.addOrder(inputFormValue);\n            ElMessage.success(\"操作成功\");\n            emits(\"update:isShow\", false);\n            emits(\"refresh\");\n        }\n    }\n]);\n</script>\n","import script from \"./add-or-update-form-dialog.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./add-or-update-form-dialog.vue?vue&type=script&setup=true&lang=ts\"\n\nconst __exports__ = script;\n\nexport default __exports__","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createElementVNode as _createElementVNode, unref as _unref, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, mergeProps as _mergeProps, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-3762aa76\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"order-status-header\" }\nconst _hoisted_2 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", { class: \"tips-popover\" }, [\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"title-text\" }, \"订单状态说明\"),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"subtitle-text\" }, \"1.订单取消\"),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"contents-text\" }, \"订单因为某些原因被取消，比如用户取消订单或者商家无法完成订单。\"),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"subtitle-text\" }, \"2.售后中\"),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"contents-text\" }, \"用户在付款后发货前申请退款，或商家发货后用户申请退款、换货，都会产生这种订单状态。\"),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"subtitle-text\" }, \"3.退款中\"),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"contents-text\" }, \"当买家在待发货的时候，选择了订单中某个商品进行退款，此时订单进入状态“退款中”。\"),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"subtitle-text\" }, \"4.已退款\"),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"contents-text\" }, \"买家已经申请了售后服务退款，并且卖家已经同意退款，款项已经成功退回到买家的账户中。\"),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"subtitle-text\" }, \"5.待付款\"),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"contents-text\" }, \"用户刚提交订单，尚未付款，等待用户支付。由于待付款状态会锁定存，所以一般会设置超时自动取消功能。\"),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"subtitle-text\" }, \"6.待发货\"),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"contents-text\" }, \"用户付款之后，等待仓库出仓发货。\"),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"subtitle-text\" }, \"7.已发货\"),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"contents-text\" }, \"仓库已经将商品发出，用户可以通过物流信息了解商品的运输情况。\"),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"subtitle-text\" }, \"8.已签收\"),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"contents-text\" }, \"商品已经被用户签收，订单完成。\"),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"subtitle-text\" }, \"9.交易关闭\"),\n  /*#__PURE__*/_createElementVNode(\"div\", { class: \"contents-text\" }, \"当售后完成后的订单状态。“已取消”的订单状态可以合并到“交易关闭”中。\")\n], -1))\n\nimport type { Components } from \"/#/components\";\nimport { ref, reactive, nextTick } from \"vue\";\nimport { ElMessageBox, ElMessage } from \"element-plus\";\nimport { QuestionFilled } from \"@element-plus/icons-vue\";\nimport { HANDLE_CODES } from \"@/services/constants\";\nimport searchConfig from \"./search-config\";\nimport demoAPI from \"@api/demo\";\nimport customerColumnDialog from \"@views/components/customer-column-dialog.vue\";\nimport tableColumnCopy from \"./components/table-column-copy.vue\";\nimport viewOrderDetailsDialog from \"./components/view-order-details-dialog.vue\";\nimport excelExportDialog from \"./components/excel-export-dialog.vue\";\nimport addOrUpdateFormDialog from \"./components/add-or-update-form-dialog.vue\";\n\n// search page 组件\n\nexport default /*#__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\nconst searchPageRef = ref<Components.SearchPageRef>();\n\n// 是否显示自定义列信息弹窗\nconst isShowCustomerColumnDialog = ref(false);\n\n// 是否显示订单详情信息弹窗\nconst isShowViewOrderDetailsDialog = ref(false);\n\n// 是否显示excel导出弹窗\nconst isShowExcelExportDialog = ref(false);\n\n// 是否显示新增弹窗\nconst isShowAddOrUpdateFormDialog = ref(false);\n\n// 当前选中数据列\nconst selectedRow = ref();\n\n// 搜索表单值\nconst searchFormValue = ref({});\n\n// 当前订单统计数据\nconst orertReportData = reactive({\n    allCount: 0,\n    pendingCount: 0,\n    paidCount: 0,\n    deliveredCount: 0,\n    completedCount: 0,\n    cancelledCount: 0,\n    refundedCount: 0\n});\n\n// 数据刷新操作\nconst refreshHandle = async function () {\n    await searchPageRef.value!.query();\n};\n\n// 当前选择的数据变化事件\nconst selectRowsChangeHandle = function (rows) {\n    searchPageRef.value?.changeButtons((actionButtons: Components.TableButton[]) => {\n        const button = actionButtons.find(button => button.handleCode === HANDLE_CODES.BATCHCANCEL);\n        if (!button) {\n            return;\n        }\n        if (!button.props) {\n            button.props = {};\n        }\n        button.props.disabled = rows.length === 0 || rows.some(row => row.orderStatus !== 10);\n    });\n};\n\n// 显示菜单相关操作信息弹\nconst showDialogHandle = function (rows, { handleCode }) {\n    if (HANDLE_CODES.CREATE === handleCode) {\n        // 展示新增订单弹窗\n        isShowAddOrUpdateFormDialog.value = true;\n    } else if (HANDLE_CODES.QUERY === handleCode) {\n        // 展示自定义列弹窗\n        selectedRow.value = null;\n        isShowCustomerColumnDialog.value = true;\n    } else if (HANDLE_CODES.SEARCH === handleCode) {\n        // 查看订单详情\n        selectedRow.value = rows;\n        isShowViewOrderDetailsDialog.value = true;\n    }\n};\n\n// 渠道订单操作\nconst cancelOrderHandle = async function (rows, { handleCode }) {\n    let tips = \"确定要取消当前选中的订单信息吗?\";\n    if (handleCode === HANDLE_CODES.CANCEL) {\n        rows = [rows];\n    } else {\n        tips = \"确定要取消当前选中的\" + rows.length + \"个订单信息吗?\";\n    }\n    await ElMessageBox.confirm(tips, \"信息确认\", {\n        customClass: \"custom-confirm\",\n        confirmButtonText: \"确认\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n    });\n    await demoAPI.batchUpdateOrderStatus({ orderNoList: rows.map(row => row.orderNo), status: 10 });\n    ElMessage({\n        customClass: \"custom-message\",\n        message: \"操作成功\",\n        type: \"success\"\n    });\n    refreshHandle();\n};\n\n// excel 导出\nconst excelExportHandle = function () {\n    searchFormValue.value = searchPageRef.value!.getSearchedValue();\n    isShowExcelExportDialog.value = true;\n};\n\n// 修改数据列展示状态操作\nconst saveColumnShowStatusHandle = async function (columnKeys: string[]) {\n    if (!searchPageRef.value) {\n        await nextTick();\n    }\n    searchPageRef.value?.updateTableColumnsShowStatus(columnKeys);\n};\n\n// 搜索页配置数据\nconst searchConfigData = reactive(searchConfig({ showDialogHandle, excelExportHandle, cancelOrderHandle, orertReportData }));\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_radio_button = _resolveComponent(\"el-radio-button\")!\n  const _component_el_radio_group = _resolveComponent(\"el-radio-group\")!\n  const _component_el_icon = _resolveComponent(\"el-icon\")!\n  const _component_el_popover = _resolveComponent(\"el-popover\")!\n  const _component_search_page = _resolveComponent(\"search-page\")!\n\n  return (_openBlock(), _createBlock(_component_search_page, _mergeProps(searchConfigData, {\n    ref_key: \"searchPageRef\",\n    ref: searchPageRef,\n    onSelectRowsChange: selectRowsChangeHandle\n  }), {\n    dataTable_orderNo: _withCtx(({ row }) => [\n      _createVNode(tableColumnCopy, {\n        value: row.orderNo\n      }, null, 8, [\"value\"])\n    ]),\n    actionBar_default: _withCtx(() => [\n      _createVNode(_component_el_radio_group, {\n        modelValue: searchConfigData.dataTableProps.filters.orderStatus,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((searchConfigData.dataTableProps.filters.orderStatus) = $event)),\n        onChange: refreshHandle\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_el_radio_button, { value: \"\" }, {\n            default: _withCtx(() => [\n              _createTextVNode(\"全部订单(\" + _toDisplayString(orertReportData.allCount) + \")\", 1)\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_radio_button, { value: 10 }, {\n            default: _withCtx(() => [\n              _createTextVNode(\"待付款(\" + _toDisplayString(orertReportData.pendingCount) + \")\", 1)\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_radio_button, { value: 20 }, {\n            default: _withCtx(() => [\n              _createTextVNode(\"待发货(\" + _toDisplayString(orertReportData.paidCount) + \")\", 1)\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_radio_button, { value: 30 }, {\n            default: _withCtx(() => [\n              _createTextVNode(\"已发货(\" + _toDisplayString(orertReportData.deliveredCount) + \")\", 1)\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_radio_button, { value: 40 }, {\n            default: _withCtx(() => [\n              _createTextVNode(\"已签收(\" + _toDisplayString(orertReportData.completedCount) + \")\", 1)\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_radio_button, { value: -1 }, {\n            default: _withCtx(() => [\n              _createTextVNode(\"已取消(\" + _toDisplayString(orertReportData.cancelledCount) + \")\", 1)\n            ]),\n            _: 1\n          }),\n          _createVNode(_component_el_radio_button, { value: -5 }, {\n            default: _withCtx(() => [\n              _createTextVNode(\"已退款(\" + _toDisplayString(orertReportData.refundedCount) + \")\", 1)\n            ]),\n            _: 1\n          })\n        ]),\n        _: 1\n      }, 8, [\"modelValue\"])\n    ]),\n    dataTable_orderStatusHeader: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createTextVNode(\" 订单状态 \"),\n        _createVNode(_component_el_popover, {\n          width: \"450\",\n          trigger: \"hover\",\n          \"popper-style\": \"padding: 0px\"\n        }, {\n          reference: _withCtx(() => [\n            _createVNode(_component_el_icon, null, {\n              default: _withCtx(() => [\n                _createVNode(_unref(QuestionFilled))\n              ]),\n              _: 1\n            })\n          ]),\n          default: _withCtx(() => [\n            _hoisted_2\n          ]),\n          _: 1\n        })\n      ])\n    ]),\n    default: _withCtx(() => [\n      _createVNode(customerColumnDialog, {\n        \"is-show\": isShowCustomerColumnDialog.value,\n        tableColumns: searchConfigData.dataTableProps.columns,\n        localStorageKey: \"orderListCustomerColumns\",\n        onClose: _cache[1] || (_cache[1] = ($event: any) => (isShowCustomerColumnDialog.value = false)),\n        onSave: saveColumnShowStatusHandle\n      }, null, 8, [\"is-show\", \"tableColumns\"]),\n      (isShowViewOrderDetailsDialog.value)\n        ? (_openBlock(), _createBlock(viewOrderDetailsDialog, {\n            key: 0,\n            row: selectedRow.value,\n            onClose: _cache[2] || (_cache[2] = ($event: any) => (isShowViewOrderDetailsDialog.value = false))\n          }, null, 8, [\"row\"]))\n        : _createCommentVNode(\"\", true),\n      _createVNode(excelExportDialog, {\n        isShow: isShowExcelExportDialog.value,\n        searchFields: searchConfigData.searchFormProps.fields,\n        tableColumns: searchConfigData.dataTableProps.columns,\n        searchFormValue: searchFormValue.value,\n        onClose: _cache[3] || (_cache[3] = ($event: any) => (isShowExcelExportDialog.value = false))\n      }, null, 8, [\"isShow\", \"searchFields\", \"tableColumns\", \"searchFormValue\"]),\n      (isShowAddOrUpdateFormDialog.value)\n        ? (_openBlock(), _createBlock(addOrUpdateFormDialog, {\n            key: 1,\n            isShow: isShowAddOrUpdateFormDialog.value,\n            \"onUpdate:isShow\": _cache[4] || (_cache[4] = ($event: any) => ((isShowAddOrUpdateFormDialog).value = $event)),\n            onRefresh: refreshHandle\n          }, null, 8, [\"isShow\"]))\n        : _createCommentVNode(\"\", true)\n    ]),\n    _: 1\n  }, 16))\n}\n}\n\n})","<!--\n * @创建者: yujinjin9@126.com\n * @创建时间: 2024-01-19 16:44:26\n * @最后修改作者: yujinjin9@126.com\n * @最后修改时间: 2024-03-05 17:56:42\n * @项目的路径: \\vue-manager-system\\src\\views\\plays\\order-list\\index.vue\n * @描述: 订单查询页面\n-->\n<template>\n    <search-page v-bind=\"searchConfigData\" ref=\"searchPageRef\" @selectRowsChange=\"selectRowsChangeHandle\">\n        <template #dataTable_orderNo=\"{ row }\">\n            <table-column-copy :value=\"row.orderNo\" />\n        </template>\n        <template #actionBar_default>\n            <el-radio-group v-model=\"searchConfigData.dataTableProps.filters.orderStatus\" @change=\"refreshHandle\">\n                <el-radio-button value=\"\">全部订单({{ orertReportData.allCount }})</el-radio-button>\n                <el-radio-button :value=\"10\">待付款({{ orertReportData.pendingCount }})</el-radio-button>\n                <el-radio-button :value=\"20\">待发货({{ orertReportData.paidCount }})</el-radio-button>\n                <el-radio-button :value=\"30\">已发货({{ orertReportData.deliveredCount }})</el-radio-button>\n                <el-radio-button :value=\"40\">已签收({{ orertReportData.completedCount }})</el-radio-button>\n                <el-radio-button :value=\"-1\">已取消({{ orertReportData.cancelledCount }})</el-radio-button>\n                <el-radio-button :value=\"-5\">已退款({{ orertReportData.refundedCount }})</el-radio-button>\n            </el-radio-group>\n        </template>\n        <template #dataTable_orderStatusHeader>\n            <div class=\"order-status-header\">\n                订单状态\n                <el-popover width=\"450\" trigger=\"hover\" popper-style=\"padding: 0px\">\n                    <div class=\"tips-popover\">\n                        <div class=\"title-text\">订单状态说明</div>\n                        <div class=\"subtitle-text\">1.订单取消</div>\n                        <div class=\"contents-text\">订单因为某些原因被取消，比如用户取消订单或者商家无法完成订单。</div>\n                        <div class=\"subtitle-text\">2.售后中</div>\n                        <div class=\"contents-text\">用户在付款后发货前申请退款，或商家发货后用户申请退款、换货，都会产生这种订单状态。</div>\n                        <div class=\"subtitle-text\">3.退款中</div>\n                        <div class=\"contents-text\">当买家在待发货的时候，选择了订单中某个商品进行退款，此时订单进入状态“退款中”。</div>\n                        <div class=\"subtitle-text\">4.已退款</div>\n                        <div class=\"contents-text\">买家已经申请了售后服务退款，并且卖家已经同意退款，款项已经成功退回到买家的账户中。</div>\n                        <div class=\"subtitle-text\">5.待付款</div>\n                        <div class=\"contents-text\">用户刚提交订单，尚未付款，等待用户支付。由于待付款状态会锁定存，所以一般会设置超时自动取消功能。</div>\n                        <div class=\"subtitle-text\">6.待发货</div>\n                        <div class=\"contents-text\">用户付款之后，等待仓库出仓发货。</div>\n                        <div class=\"subtitle-text\">7.已发货</div>\n                        <div class=\"contents-text\">仓库已经将商品发出，用户可以通过物流信息了解商品的运输情况。</div>\n                        <div class=\"subtitle-text\">8.已签收</div>\n                        <div class=\"contents-text\">商品已经被用户签收，订单完成。</div>\n                        <div class=\"subtitle-text\">9.交易关闭</div>\n                        <div class=\"contents-text\">当售后完成后的订单状态。“已取消”的订单状态可以合并到“交易关闭”中。</div>\n                    </div>\n                    <template #reference>\n                        <el-icon>\n                            <QuestionFilled />\n                        </el-icon>\n                    </template>\n                </el-popover>\n            </div>\n        </template>\n        <customer-column-dialog\n            :is-show=\"isShowCustomerColumnDialog\"\n            :tableColumns=\"searchConfigData.dataTableProps.columns\"\n            localStorageKey=\"orderListCustomerColumns\"\n            @close=\"isShowCustomerColumnDialog = false\"\n            @save=\"saveColumnShowStatusHandle\"\n        />\n        <view-order-details-dialog v-if=\"isShowViewOrderDetailsDialog\" :row=\"selectedRow\" @close=\"isShowViewOrderDetailsDialog = false\" />\n        <excel-export-dialog\n            :isShow=\"isShowExcelExportDialog\"\n            :searchFields=\"searchConfigData.searchFormProps.fields\"\n            :tableColumns=\"searchConfigData.dataTableProps.columns\"\n            :searchFormValue=\"searchFormValue\"\n            @close=\"isShowExcelExportDialog = false\"\n        />\n        <add-or-update-form-dialog v-if=\"isShowAddOrUpdateFormDialog\" v-model:isShow=\"isShowAddOrUpdateFormDialog\" @refresh=\"refreshHandle\" />\n    </search-page>\n</template>\n<script setup lang=\"ts\">\nimport type { Components } from \"/#/components\";\nimport { ref, reactive, nextTick } from \"vue\";\nimport { ElMessageBox, ElMessage } from \"element-plus\";\nimport { QuestionFilled } from \"@element-plus/icons-vue\";\nimport { HANDLE_CODES } from \"@/services/constants\";\nimport searchConfig from \"./search-config\";\nimport demoAPI from \"@api/demo\";\nimport customerColumnDialog from \"@views/components/customer-column-dialog.vue\";\nimport tableColumnCopy from \"./components/table-column-copy.vue\";\nimport viewOrderDetailsDialog from \"./components/view-order-details-dialog.vue\";\nimport excelExportDialog from \"./components/excel-export-dialog.vue\";\nimport addOrUpdateFormDialog from \"./components/add-or-update-form-dialog.vue\";\n\n// search page 组件\nconst searchPageRef = ref<Components.SearchPageRef>();\n\n// 是否显示自定义列信息弹窗\nconst isShowCustomerColumnDialog = ref(false);\n\n// 是否显示订单详情信息弹窗\nconst isShowViewOrderDetailsDialog = ref(false);\n\n// 是否显示excel导出弹窗\nconst isShowExcelExportDialog = ref(false);\n\n// 是否显示新增弹窗\nconst isShowAddOrUpdateFormDialog = ref(false);\n\n// 当前选中数据列\nconst selectedRow = ref();\n\n// 搜索表单值\nconst searchFormValue = ref({});\n\n// 当前订单统计数据\nconst orertReportData = reactive({\n    allCount: 0,\n    pendingCount: 0,\n    paidCount: 0,\n    deliveredCount: 0,\n    completedCount: 0,\n    cancelledCount: 0,\n    refundedCount: 0\n});\n\n// 数据刷新操作\nconst refreshHandle = async function () {\n    await searchPageRef.value!.query();\n};\n\n// 当前选择的数据变化事件\nconst selectRowsChangeHandle = function (rows) {\n    searchPageRef.value?.changeButtons((actionButtons: Components.TableButton[]) => {\n        const button = actionButtons.find(button => button.handleCode === HANDLE_CODES.BATCHCANCEL);\n        if (!button) {\n            return;\n        }\n        if (!button.props) {\n            button.props = {};\n        }\n        button.props.disabled = rows.length === 0 || rows.some(row => row.orderStatus !== 10);\n    });\n};\n\n// 显示菜单相关操作信息弹\nconst showDialogHandle = function (rows, { handleCode }) {\n    if (HANDLE_CODES.CREATE === handleCode) {\n        // 展示新增订单弹窗\n        isShowAddOrUpdateFormDialog.value = true;\n    } else if (HANDLE_CODES.QUERY === handleCode) {\n        // 展示自定义列弹窗\n        selectedRow.value = null;\n        isShowCustomerColumnDialog.value = true;\n    } else if (HANDLE_CODES.SEARCH === handleCode) {\n        // 查看订单详情\n        selectedRow.value = rows;\n        isShowViewOrderDetailsDialog.value = true;\n    }\n};\n\n// 渠道订单操作\nconst cancelOrderHandle = async function (rows, { handleCode }) {\n    let tips = \"确定要取消当前选中的订单信息吗?\";\n    if (handleCode === HANDLE_CODES.CANCEL) {\n        rows = [rows];\n    } else {\n        tips = \"确定要取消当前选中的\" + rows.length + \"个订单信息吗?\";\n    }\n    await ElMessageBox.confirm(tips, \"信息确认\", {\n        customClass: \"custom-confirm\",\n        confirmButtonText: \"确认\",\n        cancelButtonText: \"取消\",\n        type: \"warning\"\n    });\n    await demoAPI.batchUpdateOrderStatus({ orderNoList: rows.map(row => row.orderNo), status: 10 });\n    ElMessage({\n        customClass: \"custom-message\",\n        message: \"操作成功\",\n        type: \"success\"\n    });\n    refreshHandle();\n};\n\n// excel 导出\nconst excelExportHandle = function () {\n    searchFormValue.value = searchPageRef.value!.getSearchedValue();\n    isShowExcelExportDialog.value = true;\n};\n\n// 修改数据列展示状态操作\nconst saveColumnShowStatusHandle = async function (columnKeys: string[]) {\n    if (!searchPageRef.value) {\n        await nextTick();\n    }\n    searchPageRef.value?.updateTableColumnsShowStatus(columnKeys);\n};\n\n// 搜索页配置数据\nconst searchConfigData = reactive(searchConfig({ showDialogHandle, excelExportHandle, cancelOrderHandle, orertReportData }));\n</script>\n<style lang=\"scss\" scoped>\n.order-status-header {\n    display: flex;\n    align-items: center;\n\n    .el-icon {\n        color: #999;\n        font-size: 16px;\n        margin-left: 4px;\n    }\n}\n.tips-popover {\n    padding: 12px 24px;\n    max-height: 300px;\n    overflow-y: auto;\n\n    .title-text {\n        text-align: center;\n        padding-bottom: 5px;\n        line-height: 30px;\n        font-size: 18px;\n        color: #000;\n    }\n\n    .subtitle-text {\n        padding: 5px 0px;\n        line-height: 25px;\n        font-size: 15px;\n        color: #000;\n    }\n\n    .contents-text {\n        line-height: 20px;\n        font-size: 13px;\n    }\n}\n</style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=3762aa76&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-3762aa76\"]])\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","_defineComponent","__name","props","finished","type","Boolean","default","ratio","Number","validator","value","time","progress","Object","emits","setup","__props","emit","__emit","percentage","ref","timeIntervalId","watch","start","progressAttributes","computed","assign","textInside","strokeWidth","window","clearInterval","times","setInterval","parseInt","Math","random","toFixed","onMounted","onUnmounted","_ctx","_cache","_component_el_progress","_resolveComponent","_openBlock","_createElementBlock","_createVNode","_mergeProps","_createElementVNode","_renderSlot","$slots","__exports__","queryPageListForCommon","inputData","ajaxOptions","request","url","data","queryConfigData","queryPageOrderList","method","params","addOrder","queryOrderDetails","orderNo","batchUpdateOrderStatus","DEVICE_SOURCE_ENUM","label","ORDER_STATUS_ENUM","PAY_WAY_ENUM","showDialogHandle","excelExportHandle","cancelOrderHandle","orertReportData","searchFormProps","fields","name","dayjs","add","format","actionBarProps","align","buttons","text","handleCode","HANDLE_CODES","CREATE","click","BATCHCANCEL","disabled","QUERY","EXPORT","dataTableProps","filters","orderStatus","query","demoAPI","queryParametersProcess","parameters","dateRange","length","startDate","endDate","queryResponseProcess","queryResult","allCount","pendingCount","paidCount","deliveredCount","completedCount","cancelledCount","refundedCount","total","rows","columns","width","prop","minWidth","slot","slotHeader","digit","formate","separator","showOverflowTooltip","SEARCH","CANCEL","display","row","_hoisted_3","_hoisted_4","key","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","isShow","fixedColumnKeys","Array","localStorageKey","String","groupColumnKeys","tableColumns","required","minSelecedNumber","customColumns","searchLoading","noDataForSearch","keyword","checkAll","isIndeterminate","activeNames","flapCustomColumns","map","item","childList","flat","selectedColumns","filter","selected","init","columnKeys","getValue","forEach","columnItem","indeterminate","findTableColumn","find","tableColumn","includes","fixed","selectedNumber","childItem","push","column","searchDebounce","debounce","index","some","checkChange","every","searchHandle","close","isCheckAll","totalNumber","restoreColumns","deleteSelected","findIndex","save","setValue","_component_el_input","_component_el_checkbox","_component_el_col","_component_el_row","_component_el_collapse_item","_component_el_collapse","_component_el_icon","_component_el_button","_component_el_dialog","_createBlock","title","appendToBody","destroyOnClose","onClosed","footer","_withCtx","onClick","_createTextVNode","_","modelValue","$event","modelModifiers","trim","style","clearable","placeholder","_unref","Search","onInput","_Fragment","_renderList","_withDirectives","_withModifiers","onChange","_toDisplayString","span","_vShow","_createCommentVNode","Delete","copyTips","elIconRef","copyTextHandle","clipboard","Clipboard","on","ElMessage","message","duration","destroy","error","_component_el_tooltip","effect","content","ref_key","DocumentCopy","_withScopeId","n","_pushScopeId","_popScopeId","activeCollapseNames","dialogClosed","dialogVisible","orderDetails","goodsDataTableFields","formatter","price","quantity","couponDataTableFields","getEnumText","datas","async","isShowLoading","_component_el_tag","_component_el_descriptions_item","_component_el_descriptions","_component_data_table","direction","border","numberFormat","orderAmount","deviceSource","dateFormat","createTime","buyerId","buyerName","buyerMobileNumber","receiver","receiverMobileNumber","receiverAddress","remark","payInfo","payNo","payAmount","payTime","payWay","isShowPagination","maxHeight","goodsList","couponList","logisticsList","logisticsItem","logisticsNumber","companyName","afterSalesList","afterSalesItem","logisticsNumbers","refundAmount","reason","searchFields","searchFormValue","isStorageSearchFormValue","searchFormRef","exportFields","progressInfo","reactive","isLoading","selectedFields","minSelecedFields","initSearchFieldsValue","changeFormFields","formFields","fieldItem","getObjectProperty","initExportFields","submitHandle","setTimeout","commonApi","download","require","fileName","Date","now","immediate","_component_search_form","loading","isShowSearchButton","isShowCollapse","onFieldsChange","virtuallyProgress","onAfterFinished","dialogFormRef","inputForm","rules","uploadProps","multiple","inputFormValue","validate","success","_component_dialog_form","inputFormProps","dialogProps","onClose","searchPageRef","isShowCustomerColumnDialog","isShowViewOrderDetailsDialog","isShowExcelExportDialog","isShowAddOrUpdateFormDialog","selectedRow","refreshHandle","selectRowsChangeHandle","changeButtons","actionButtons","button","tips","ElMessageBox","confirm","customClass","confirmButtonText","cancelButtonText","orderNoList","status","getSearchedValue","saveColumnShowStatusHandle","nextTick","updateTableColumnsShowStatus","searchConfigData","searchConfig","_component_el_radio_button","_component_el_radio_group","_component_el_popover","_component_search_page","onSelectRowsChange","dataTable_orderNo","tableColumnCopy","actionBar_default","dataTable_orderStatusHeader","trigger","reference","QuestionFilled","customerColumnDialog","onSave","viewOrderDetailsDialog","excelExportDialog","addOrUpdateFormDialog","onRefresh"],"sourceRoot":""}