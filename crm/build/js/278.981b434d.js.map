{"version":3,"file":"build/js/278.981b434d.js","mappings":"8OAKA,MAAMA,EAAeC,KAAMC,EAAAA,EAAAA,IAAa,mBAAmBD,EAAEA,KAAIE,EAAAA,EAAAA,MAAcF,GACzEG,EAAa,CAAEC,MAAO,gBACtBC,EAAa,CAAED,MAAO,cACtBE,EAA2BP,GAAa,KAAmBQ,EAAAA,EAAAA,IAAoB,MAAO,CAC1FC,IAAK,WACLC,IAAKC,GACJ,MAAO,KACJC,EAA2BZ,GAAa,KAAmBQ,EAAAA,EAAAA,IAAoB,KAAM,KAAM,MAAO,KAQxG,OAA4BK,EAAAA,EAAAA,IAAiB,CAEzCC,KAAM,eAERC,OAAQ,QACRC,KAAAA,CAAMC,GCeR,MAAMC,GAASC,EAAAA,EAAAA,MAGTC,GAAQC,EAAAA,EAAAA,MAERC,GAAYC,EAAAA,EAAAA,IAAS,CACvBC,YAAaJ,EAAMK,MAAMC,GACzBC,QAAS,KAGPC,GAAYC,EAAAA,EAAAA,OAElBC,EAAAA,EAAAA,KAAoBC,IAChBT,EAAUE,YAAcO,EAAGN,MAAMC,EAAY,IAIjD,MAAMM,EAAuB,WACzB,MAAMN,GAAKO,EAAAA,EAAAA,KACXL,EAAUM,kBAAkB,CAAEC,IAAK,oBAAsBT,EAAIU,WAAYR,EAAUS,aAAaT,EAAUU,oBAAoBZ,GAAIa,MAAO,QAAUb,EAAK,MACxJR,EAAOsB,KAAKZ,EAAUS,aAAaT,EAAUU,oBAAoBG,UACrE,EDTA,MAAO,CAACC,EAAUC,KAChB,MAAMC,GAAsBC,EAAAA,EAAAA,IAAkB,YACxCC,GAAsBD,EAAAA,EAAAA,IAAkB,YACxCE,GAA0BF,EAAAA,EAAAA,IAAkB,gBAC5CG,GAAuBH,EAAAA,EAAAA,IAAkB,aAE/C,OAAQI,EAAAA,EAAAA,OAAcC,EAAAA,EAAAA,IAAoB,MAAO9C,EAAY,EAC3DI,EAAAA,EAAAA,IAAoB,MAAOF,EAAY,EACrC6C,EAAAA,EAAAA,IAAaP,EAAqB,CAChCL,MAAO,KACPa,YAAa,gDACbC,KAAM,OACN,YAAa,KAEf9C,GACA4C,EAAAA,EAAAA,IAAaJ,EAAyB,CACpC,cAAe,MACfO,MAAO,SACN,CACDC,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaL,EAAqB,CAChCW,WAAYnC,EAAUE,YACtB,sBAAuBmB,EAAO,KAAOA,EAAO,GAAMe,GAAkBpC,EAAUE,YAAekC,GAC7FC,YAAa,eACbC,MAAO,CAAC,MAAQ,UACf,KAAM,EAAG,CAAC,kBAEfC,EAAG,KAELV,EAAAA,EAAAA,IAAaJ,EAAyB,CACpC,cAAe,MACfO,MAAO,SACN,CACDC,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBL,EAAAA,EAAAA,IAAaL,EAAqB,CAChCW,WAAYnC,EAAUK,QACtB,sBAAuBgB,EAAO,KAAOA,EAAO,GAAMe,GAAkBpC,EAAUK,QAAW+B,GACzFC,YAAa,eACbC,MAAO,CAAC,MAAQ,UACf,KAAM,EAAG,CAAC,kBAEfC,EAAG,KAELV,EAAAA,EAAAA,IAAaP,EAAqB,CAChCL,MAAO,OACPa,YAAa,mHACbC,KAAM,UACN,YAAa,KAEfzC,GACAuC,EAAAA,EAAAA,IAAaH,EAAsB,CACjCY,MAAO,CAAC,aAAa,OAAO,MAAQ,QACpCP,KAAM,UACNS,QAAS9B,GACR,CACDuB,SAASC,EAAAA,EAAAA,KAAS,IAAM,EACtBO,EAAAA,EAAAA,IAAiB,oBAEnBF,EAAG,OAGP,CAEJ,I,UE7GA,MAAMG,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,O","sources":["webpack://vue-manager-system/./src/views/plays/details/index.vue?b517","webpack://vue-manager-system/./src/views/plays/details/index.vue","webpack://vue-manager-system/./src/views/plays/details/index.vue?17ac"],"sourcesContent":["import { defineComponent as _defineComponent } from 'vue'\nimport { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\"\nimport _imports_0 from '@assets/logo.png'\n\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-660b5775\"),n=n(),_popScopeId(),n)\nconst _hoisted_1 = { class: \"play-details\" }\nconst _hoisted_2 = { class: \"params-box\" }\nconst _hoisted_3 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  alt: \"Vue logo\",\n  src: _imports_0\n}, null, -1))\nconst _hoisted_4 = /*#__PURE__*/ _withScopeId(() => /*#__PURE__*/_createElementVNode(\"br\", null, null, -1))\n\nimport { reactive } from \"vue\";\nimport { useRoute, useRouter, onBeforeRouteUpdate } from \"vue-router\";\nimport { pageViewsStore } from \"@/stores\";\nimport { randomId } from \"@yujinjin/utils\";\n\n\nexport default /*#__PURE__*/_defineComponent({\n  ...{\n    name: \"play-details\"\n},\n  __name: 'index',\n  setup(__props) {\n\n\n\nconst router = useRouter();\n\n// 当前路由对象\nconst route = useRoute();\n\nconst inputForm = reactive({\n    parameterId: route.query.id as string,\n    content: \"\"\n});\n\nconst pageViews = pageViewsStore();\n\nonBeforeRouteUpdate(to => {\n    inputForm.parameterId = to.query.id as string;\n});\n\n// 打开新tab页\nconst openNewTabPageHandle = function () {\n    const id = randomId();\n    pageViews.openPageByTabPage({ url: \"/play/details?id=\" + id, fromPageId: pageViews.visitedViews[pageViews.currentVisiteIndex].id, title: \"详情路由(\" + id + \")\" });\n    router.push(pageViews.visitedViews[pageViews.currentVisiteIndex].routePath);\n};\n\nreturn (_ctx: any,_cache: any) => {\n  const _component_el_alert = _resolveComponent(\"el-alert\")!\n  const _component_el_input = _resolveComponent(\"el-input\")!\n  const _component_el_form_item = _resolveComponent(\"el-form-item\")!\n  const _component_el_button = _resolveComponent(\"el-button\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [\n    _createElementVNode(\"div\", _hoisted_2, [\n      _createVNode(_component_el_alert, {\n        title: \"说明\",\n        description: \"这里是验证中台框架内部同一个页面但不同参数展示的内容，比如：菜单配置了多个订单详情页的入口\",\n        type: \"info\",\n        \"show-icon\": \"\"\n      }),\n      _hoisted_3,\n      _createVNode(_component_el_form_item, {\n        \"label-width\": \"120\",\n        label: \"页面ID：\"\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_el_input, {\n            modelValue: inputForm.parameterId,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = ($event: any) => ((inputForm.parameterId) = $event)),\n            placeholder: \"Please input\",\n            style: {\"width\":\"350px\"}\n          }, null, 8, [\"modelValue\"])\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_el_form_item, {\n        \"label-width\": \"120\",\n        label: \"输入内容：\"\n      }, {\n        default: _withCtx(() => [\n          _createVNode(_component_el_input, {\n            modelValue: inputForm.content,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = ($event: any) => ((inputForm.content) = $event)),\n            placeholder: \"Please input\",\n            style: {\"width\":\"350px\"}\n          }, null, 8, [\"modelValue\"])\n        ]),\n        _: 1\n      }),\n      _createVNode(_component_el_alert, {\n        title: \"最终结论\",\n        description: \"同一个页面路由引用的同一个实例被打开多次，在这几个页面路由切换时是无法缓存每一个地址页面输入的内容，只会缓存最后一次输入的内容,这里最好是通过onBeforeRouteUpdate API 来监控路由更新来实现业务数据的变化\",\n        type: \"warning\",\n        \"show-icon\": \"\"\n      }),\n      _hoisted_4,\n      _createVNode(_component_el_button, {\n        style: {\"margin-top\":\"24px\",\"width\":\"100%\"},\n        type: \"primary\",\n        onClick: openNewTabPageHandle\n      }, {\n        default: _withCtx(() => [\n          _createTextVNode(\"打开另外一个详情页验证一下\")\n        ]),\n        _: 1\n      })\n    ])\n  ]))\n}\n}\n\n})","<!--\n * @创建者: yujinjin9@126.com\n * @创建时间: 2023-12-14 15:28:35\n * @最后修改作者: yujinjin9@126.com\n * @最后修改时间: 2024-01-30 10:34:34\n * @项目的路径: \\vue-manager-system\\src\\views\\plays\\details\\index.vue\n * @描述: 详情页路由测试\n-->\n<template>\n    <div class=\"play-details\">\n        <div class=\"params-box\">\n            <el-alert title=\"说明\" description=\"这里是验证中台框架内部同一个页面但不同参数展示的内容，比如：菜单配置了多个订单详情页的入口\" type=\"info\" show-icon />\n            <img alt=\"Vue logo\" src=\"@assets/logo.png\" />\n            <el-form-item label-width=\"120\" label=\"页面ID：\">\n                <el-input v-model=\"inputForm.parameterId\" placeholder=\"Please input\" style=\"width: 350px\" />\n            </el-form-item>\n            <el-form-item label-width=\"120\" label=\"输入内容：\">\n                <el-input v-model=\"inputForm.content\" placeholder=\"Please input\" style=\"width: 350px\" />\n            </el-form-item>\n            <el-alert\n                title=\"最终结论\"\n                description=\"同一个页面路由引用的同一个实例被打开多次，在这几个页面路由切换时是无法缓存每一个地址页面输入的内容，只会缓存最后一次输入的内容,这里最好是通过onBeforeRouteUpdate API 来监控路由更新来实现业务数据的变化\"\n                type=\"warning\"\n                show-icon\n            />\n            <br />\n            <el-button style=\"margin-top: 24px; width: 100%\" type=\"primary\" @click=\"openNewTabPageHandle\">打开另外一个详情页验证一下</el-button>\n        </div>\n    </div>\n</template>\n<script setup lang=\"ts\">\nimport { reactive } from \"vue\";\nimport { useRoute, useRouter, onBeforeRouteUpdate } from \"vue-router\";\nimport { pageViewsStore } from \"@/stores\";\nimport { randomId } from \"@yujinjin/utils\";\n\ndefineOptions({\n    name: \"play-details\"\n});\n\nconst router = useRouter();\n\n// 当前路由对象\nconst route = useRoute();\n\nconst inputForm = reactive({\n    parameterId: route.query.id as string,\n    content: \"\"\n});\n\nconst pageViews = pageViewsStore();\n\nonBeforeRouteUpdate(to => {\n    inputForm.parameterId = to.query.id as string;\n});\n\n// 打开新tab页\nconst openNewTabPageHandle = function () {\n    const id = randomId();\n    pageViews.openPageByTabPage({ url: \"/play/details?id=\" + id, fromPageId: pageViews.visitedViews[pageViews.currentVisiteIndex].id, title: \"详情路由(\" + id + \")\" });\n    router.push(pageViews.visitedViews[pageViews.currentVisiteIndex].routePath);\n};\n</script>\n<style lang=\"scss\" scoped>\n.play-details {\n    text-align: center;\n    .params-box {\n        margin: 0px auto;\n        width: 600px;\n        text-align: left;\n\n        img {\n            margin: 0px auto;\n            display: block;\n        }\n    }\n}\n</style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=ts\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=ts\"\n\nimport \"./index.vue?vue&type=style&index=0&id=660b5775&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-660b5775\"]])\n\nexport default __exports__"],"names":["_withScopeId","n","_pushScopeId","_popScopeId","_hoisted_1","class","_hoisted_2","_hoisted_3","_createElementVNode","alt","src","_imports_0","_hoisted_4","_defineComponent","name","__name","setup","__props","router","useRouter","route","useRoute","inputForm","reactive","parameterId","query","id","content","pageViews","pageViewsStore","onBeforeRouteUpdate","to","openNewTabPageHandle","randomId","openPageByTabPage","url","fromPageId","visitedViews","currentVisiteIndex","title","push","routePath","_ctx","_cache","_component_el_alert","_resolveComponent","_component_el_input","_component_el_form_item","_component_el_button","_openBlock","_createElementBlock","_createVNode","description","type","label","default","_withCtx","modelValue","$event","placeholder","style","_","onClick","_createTextVNode","__exports__"],"sourceRoot":""}